<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"
      xmlns:app="http://www.w3.org/2007/app">

  <link rel="first" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry" />

  
  <link rel="next" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry?page=1633618841" />
  

  <title>やってみる</title>
  
  <subtitle>アウトプットすべく己を導くためのブログ。その試行錯誤すらたれ流す。</subtitle>
  
  <link rel="alternate" href="https://ytyaru.hatenablog.com/"/>
  <updated>2021-10-15T00:00:00+09:00</updated>
  <author>
    <name>ytyaru</name>
  </author>
  <generator uri="https://blog.hatena.ne.jp/" version="77ad8c52ad1e1f6a4332d656a45f5ee8">Hatena::Blog</generator>
  <id>hatenablog://blog/6653812171400236667</id>

  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613437144101</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613437144101"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/15/000000"/>
<author><name>ytyaru</name></author>
<title>PythonでRSSからHTMLの本文を抽出してSQLite3に挿入する（未登録のみ挿入する）</title>
<updated>2021-10-15T00:00:00+09:00</updated>
<published>2021-10-15T00:00:36+09:00</published>
<app:edited>2021-10-15T00:00:36+09:00</app:edited>
<summary type="text">RSSデータがDB最新より新しいかチェックする。</summary>
<content type="text/x-markdown">　RSSデータがDB最新より新しいかチェックする。

&lt;!-- more --&gt;

# 成果物

* [github](https://github.com/ytyaru/Python.Rss.Html.Extract.SQLite3.Insert.Newer.20190920111033)

# 主な変更コード

NewsDb.py
```python
class NewsDb:
    def __is_get_latest(self):
        cur = self.conn.cursor()
        return cur.execute(self.__get_latest_sql()).fetchone()

    def __get_newer_news(self):
        self.news = sorted(self.news, key=operator.itemgetter(1)) # 第2キー: URL昇順
        self.news = sorted(self.news, key=operator.itemgetter(0), reverse=True) # 第1キー: 公開日時降順
        latest_published, latest_url = self.__is_get_latest() # DB最新
        if latest_published is None: return self.news # DBが0件なら全件挿入する

        # JSON最古がDB最新より新しければ全件挿入する
        if self.news[len(self.news)-1][0] &gt; latest_published: return self.news
        # JSON最新がDB最新と同じか古ければ挿入しない
        if (self.news[0][0] &lt; latest_published or
           (self.news[0][0] == latest_published and 
            self.news[0][1] == latest_url)): return None
        # JSON内にDB最新が存在する
        try: 
            # 先頭からDB最新+1までを挿入する
            idx = self.news.index((latest_published, latest_url))
            return self.news[0:idx]
        # JSON内にDB最新が存在しない
        except ValueError:
            # JSON先頭がDB最新より新しいなら全件挿入する
            if self.news[0][0] &gt; latest_published: return self.news
            # JSON先頭がDB最新かそれより古いなら挿入しない
            else: return None
    def insert(self):
        if 0 == len(self.news): return
        try:
            ins_news = self.__get_newer_news()
            if ins_news is None: return
            cur = self.conn.cursor()
            cur.executemany(self.__insert_sql(), ins_news)
            self.conn.commit()
            self.news.clear()
        except: 
            import traceback
            traceback.print_exc()
            self.conn.rollback()

```

# 所感

　テストできてない。

　あと、最新チェックのところって表制約で簡略化できないか？　Pythonで実装するの超大変。

# 対象環境

* &lt;time datetime=&quot;2019-09-20T11:09:18+0900&quot; title=&quot;実施日&quot;&gt;2019-09-20&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```

# 前回まで

* [NewsApiを使ってみた](http://ytyaru.hatenablog.com/entry/2021/09/21/000000)
* [NewsApiでカテゴリ別にニュースを取得する](http://ytyaru.hatenablog.com/entry/2021/09/27/000000)
* [NewsApiで得たニュースを重複なく取り込む方法を考える](http://ytyaru.hatenablog.com/entry/2021/09/28/000000)
* [NewsApiで得たニュースを保存するSQLite3テーブルを考える](http://ytyaru.hatenablog.com/entry/2021/09/29/000000)
* [NewsApiのJSONからSQLite3DBファイルへ挿入する](http://ytyaru.hatenablog.com/entry/2021/09/30/000000)
* [SQLite3に登録済みのNewsApiデータから最新を取得する](http://ytyaru.hatenablog.com/entry/2021/10/01/000000)
* [NewsApiのJSONからSQLite3DBファイルへ挿入する（未登録のみ）](http://ytyaru.hatenablog.com/entry/2021/10/02/000000)
* [HTMLから本文テキストだけを抽出したい（python-extractcontent）](http://ytyaru.hatenablog.com/entry/2021/10/03/000000)
* [HTMLから本文を抽出してフォーマットする（改行＋全角スペース）](http://ytyaru.hatenablog.com/entry/2021/10/05/000000)
* [NewsApiのURLから本文を抽出してSQLite3に挿入する](http://ytyaru.hatenablog.com/entry/2021/10/06/000000)
* [ニュースサイトを探す](http://ytyaru.hatenablog.com/entry/2021/10/09/000000)
* [PythonでRSSを取得する（feedparser）](http://ytyaru.hatenablog.com/entry/2021/10/10/000000)
* [PythonでのWebスクレイピング環境構築（chromium-driver,selenium,beautifulsoup4）](http://ytyaru.hatenablog.com/entry/2021/10/11/000000)
* [PythonでRSSからHTMLの本文を抽出してSQLite3に挿入する（重複してしまう版）](http://ytyaru.hatenablog.com/entry/2021/10/12/000000)
* [Pythonでソート（複数キーでdescとasc混在）](http://ytyaru.hatenablog.com/entry/2021/10/13/000000)
* [Pythonで二分探索する](http://ytyaru.hatenablog.com/entry/2021/10/14/000000)
</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;データがDB最新より新しいかチェックする。&lt;/p&gt;

&lt;h1&gt;成果物&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ytyaru/Python.Rss.Html.Extract.SQLite3.Insert.Newer.20190920111033&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;主な変更コード&lt;/h1&gt;

&lt;p&gt;NewsDb.py&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;NewsDb&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__is_get_latest&lt;/span&gt;(self):
        cur = self.conn.cursor()
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; cur.execute(self.__get_latest_sql()).fetchone()

    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__get_newer_news&lt;/span&gt;(self):
        self.news = &lt;span class=&quot;synIdentifier&quot;&gt;sorted&lt;/span&gt;(self.news, key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;synComment&quot;&gt;# 第2キー: URL昇順&lt;/span&gt;
        self.news = &lt;span class=&quot;synIdentifier&quot;&gt;sorted&lt;/span&gt;(self.news, key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;), reverse=&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# 第1キー: 公開日時降順&lt;/span&gt;
        latest_published, latest_url = self.__is_get_latest() &lt;span class=&quot;synComment&quot;&gt;# DB最新&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; latest_published &lt;span class=&quot;synStatement&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;: &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; self.news &lt;span class=&quot;synComment&quot;&gt;# DBが0件なら全件挿入する&lt;/span&gt;

        &lt;span class=&quot;synComment&quot;&gt;# JSON最古がDB最新より新しければ全件挿入する&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; self.news[&lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(self.news)-&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;] &amp;gt; latest_published: &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; self.news
        &lt;span class=&quot;synComment&quot;&gt;# JSON最新がDB最新と同じか古ければ挿入しない&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; (self.news[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;] &amp;lt; latest_published &lt;span class=&quot;synStatement&quot;&gt;or&lt;/span&gt;
           (self.news[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;] == latest_published &lt;span class=&quot;synStatement&quot;&gt;and&lt;/span&gt; 
            self.news[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;] == latest_url)): &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;synComment&quot;&gt;# JSON内にDB最新が存在する&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;try&lt;/span&gt;: 
            &lt;span class=&quot;synComment&quot;&gt;# 先頭からDB最新+1までを挿入する&lt;/span&gt;
            idx = self.news.index((latest_published, latest_url))
            &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; self.news[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;:idx]
        &lt;span class=&quot;synComment&quot;&gt;# JSON内にDB最新が存在しない&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;ValueError&lt;/span&gt;:
            &lt;span class=&quot;synComment&quot;&gt;# JSON先頭がDB最新より新しいなら全件挿入する&lt;/span&gt;
            &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; self.news[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;] &amp;gt; latest_published: &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; self.news
            &lt;span class=&quot;synComment&quot;&gt;# JSON先頭がDB最新かそれより古いなら挿入しない&lt;/span&gt;
            &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt;: &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;insert&lt;/span&gt;(self):
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; == &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(self.news): &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;try&lt;/span&gt;:
            ins_news = self.__get_newer_news()
            &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; ins_news &lt;span class=&quot;synStatement&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;: &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt;
            cur = self.conn.cursor()
            cur.executemany(self.__insert_sql(), ins_news)
            self.conn.commit()
            self.news.clear()
        &lt;span class=&quot;synStatement&quot;&gt;except&lt;/span&gt;: 
            &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; traceback
            traceback.print_exc()
            self.conn.rollback()
&lt;/pre&gt;


&lt;h1&gt;所感&lt;/h1&gt;

&lt;p&gt;　テストできてない。&lt;/p&gt;

&lt;p&gt;　あと、最新チェックのところって表制約で簡略化できないか？　&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Python&quot;&gt;Python&lt;/a&gt;で実装するの超大変。&lt;/p&gt;

&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-20T11:09:18+0900&quot; title=&quot;実施日&quot;&gt;2019-09-20&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;


&lt;h1&gt;前回まで&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/21/000000&quot;&gt;NewsApiを使ってみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/27/000000&quot;&gt;NewsApiでカテゴリ別にニュースを取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/28/000000&quot;&gt;NewsApiで得たニュースを重複なく取り込む方法を考える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/29/000000&quot;&gt;NewsApiで得たニュースを保存するSQLite3テーブルを考える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/30/000000&quot;&gt;NewsApiのJSONからSQLite3DBファイルへ挿入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/01/000000&quot;&gt;SQLite3に登録済みのNewsApiデータから最新を取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/02/000000&quot;&gt;NewsApiのJSONからSQLite3DBファイルへ挿入する（未登録のみ）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/03/000000&quot;&gt;HTMLから本文テキストだけを抽出したい（python-extractcontent）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/05/000000&quot;&gt;HTMLから本文を抽出してフォーマットする（改行＋全角スペース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/06/000000&quot;&gt;NewsApiのURLから本文を抽出してSQLite3に挿入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/09/000000&quot;&gt;ニュースサイトを探す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/10/000000&quot;&gt;PythonでRSSを取得する（feedparser）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/11/000000&quot;&gt;PythonでのWebスクレイピング環境構築（chromium-driver,selenium,beautifulsoup4）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/12/000000&quot;&gt;PythonでRSSからHTMLの本文を抽出してSQLite3に挿入する（重複してしまう版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/13/000000&quot;&gt;Pythonでソート（複数キーでdescとasc混在）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/14/000000&quot;&gt;Pythonで二分探索する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</hatena:formatted-content>

<category term="Webスクレイピング" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613437139938</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613437139938"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/14/000000"/>
<author><name>ytyaru</name></author>
<title>Pythonで二分探索する</title>
<updated>2021-10-14T00:00:00+09:00</updated>
<published>2021-10-14T00:00:35+09:00</published>
<app:edited>2021-10-14T00:00:35+09:00</app:edited>
<summary type="text">ソート済みリストの中から指定した値の位置を探す。高速に。</summary>
<content type="text/x-markdown">　ソート済みリストの中から指定した値の位置を探す。高速に。

&lt;!-- more --&gt;

# 情報源

* https://docs.python.org/ja/3.5/library/bisect.htmlc

# コード

　挿入位置を取得する。

```python
import bisect
l = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;] # 予めソートしておくこと
bisect.bisect_left(l, &#39;D&#39;);
```
```python
&gt;&gt;&gt; import bisect
&gt;&gt;&gt; l = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;] # 予めソートしておくこと
&gt;&gt;&gt; bisect.bisect_left(l, &#39;D&#39;);
3
```

　存在しない値は末尾を指す。

```python
import bisect
l = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;] # 予めソートしておくこと
bisect.bisect_left(l, &#39;Z&#39;);
```
```python
&gt;&gt;&gt; import bisect
&gt;&gt;&gt; l = [&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;] # 予めソートしておくこと
&gt;&gt;&gt; bisect.bisect_left(l, &#39;Z&#39;);
5
```

## 二分探索

　中間にある値より小さいか大きいかを繰り返すことで、高速に検索できる。

### 追ってみる

　こんな感じで検索するはず。

位置|リスト|検索位置
----|------|--------
0|A|
1|B|
2|C|
3|D|
4|E|←
5|F|
6|G|
7|H|
8|I|

1. 先頭`A`〜末尾`I`の中間を探す
1. 中間が探索値ならインデックスを返して終了する
1. 中間が探索値より小さいなら、先頭〜中間-1の範囲内でこれをくりかえす
1. 中間が探索値より大きいなら、中間+1〜末尾の範囲内でこれをくりかえす

　探索値`D`は中間値`E`より小さい。よって、先頭`A`〜中間-1`D`の範囲を対象に、これをくりかえす。

位置|リスト|検索位置
----|------|--------
0|A|
1|B|←
2|C|
3|D|

　偶数のため中間はない。そこで中間-1を中間とする。

　検索対象`D`は中間値`B`より大きい。よって、中間+1`C`〜末尾の範囲を対象に、これをくりかえす。

位置|リスト|検索位置
----|------|--------
2|C|←
3|D|

　偶数のため中間はない。そこで中間-1を中間とする。

　検索対象`D`は中間値`C`より大きい。よって、中間+1`D`〜末尾の範囲を対象に、これをくりかえす。

位置|リスト|検索位置
----|------|--------
3|D|←

　1件しかないため中間値はない。検索対象に一致するならインデックスを返す。さもなくば`None`なり`-1`なり例外なり、無効を意味する値を返す。

　検索対象`D`に一致。これのインデックス`3`を返す。

　&lt;small&gt;今回の場合、4回目でヒット。これは先頭から順にやったのと同じ回数。ぜんぜん高速じゃない。が、件数が増えるほど、二分探索のほうが少なくて済むはず。&lt;/small&gt;

# keyを使いたい

　複数のキーを対象に位置検索したい。

* https://stackoverflow.com/questions/27672494/how-to-use-bisect-insort-left-with-a-key

　できないことはないのかもしれない。でもよくわからない。コードもわけわからんくなる。Pythonあるある。

　どうしよう……。

## 複数キーは不可

　以下のように公開日時とURLの2キーで一意確認したいのだが、できない。これだとO(N)操作となり高速でなくなるようだ……。

```python
ins_idx = bisect.bisect_left(news_ids, (db_latest_published, db_latest_url))
```

　それなら`list.index(探索値)`でいいわ。

# 結論

　二分探索は複数キーで使えない。

# 対象環境

* &lt;time datetime=&quot;2019-09-20T13:29:04+0900&quot; title=&quot;実施日&quot;&gt;2019-09-20&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```

# 前回まで

* [NewsApiを使ってみた](http://ytyaru.hatenablog.com/entry/2021/09/21/000000)
* [NewsApiでカテゴリ別にニュースを取得する](http://ytyaru.hatenablog.com/entry/2021/09/27/000000)
* [NewsApiで得たニュースを重複なく取り込む方法を考える](http://ytyaru.hatenablog.com/entry/2021/09/28/000000)
* [NewsApiで得たニュースを保存するSQLite3テーブルを考える](http://ytyaru.hatenablog.com/entry/2021/09/29/000000)
* [NewsApiのJSONからSQLite3DBファイルへ挿入する](http://ytyaru.hatenablog.com/entry/2021/09/30/000000)
* [SQLite3に登録済みのNewsApiデータから最新を取得する](http://ytyaru.hatenablog.com/entry/2021/10/01/000000)
* [NewsApiのJSONからSQLite3DBファイルへ挿入する（未登録のみ）](http://ytyaru.hatenablog.com/entry/2021/10/02/000000)
* [HTMLから本文テキストだけを抽出したい（python-extractcontent）](http://ytyaru.hatenablog.com/entry/2021/10/03/000000)
* [HTMLから本文を抽出してフォーマットする（改行＋全角スペース）](http://ytyaru.hatenablog.com/entry/2021/10/05/000000)
* [NewsApiのURLから本文を抽出してSQLite3に挿入する](http://ytyaru.hatenablog.com/entry/2021/10/06/000000)
* [ニュースサイトを探す](http://ytyaru.hatenablog.com/entry/2021/10/09/000000)
* [PythonでRSSを取得する（feedparser）](http://ytyaru.hatenablog.com/entry/2021/10/10/000000)
* [PythonでのWebスクレイピング環境構築（chromium-driver,selenium,beautifulsoup4）](http://ytyaru.hatenablog.com/entry/2021/10/11/000000)
* [PythonでRSSからHTMLの本文を抽出してSQLite3に挿入する（重複してしまう版）](http://ytyaru.hatenablog.com/entry/2021/10/12/000000)
* [Pythonでソート（複数キーでdescとasc混在）](http://ytyaru.hatenablog.com/entry/2021/10/13/000000)
</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　ソート済みリストの中から指定した値の位置を探す。高速に。&lt;/p&gt;

&lt;h1&gt;情報源&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/ja/3.5/library/bisect.htmlc&quot;&gt;https://docs.python.org/ja/3.5/library/bisect.htmlc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;コード&lt;/h1&gt;

&lt;p&gt;　挿入位置を取得する。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; bisect
l = [&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;D&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;E&#39;&lt;/span&gt;] &lt;span class=&quot;synComment&quot;&gt;# 予めソートしておくこと&lt;/span&gt;
bisect.bisect_left(l, &lt;span class=&quot;synConstant&quot;&gt;&#39;D&#39;&lt;/span&gt;);
&lt;/pre&gt;




&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; bisect
&amp;gt;&amp;gt;&amp;gt; l = [&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;D&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;E&#39;&lt;/span&gt;] &lt;span class=&quot;synComment&quot;&gt;# 予めソートしておくこと&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; bisect.bisect_left(l, &lt;span class=&quot;synConstant&quot;&gt;&#39;D&#39;&lt;/span&gt;);
&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;　存在しない値は末尾を指す。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; bisect
l = [&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;D&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;E&#39;&lt;/span&gt;] &lt;span class=&quot;synComment&quot;&gt;# 予めソートしておくこと&lt;/span&gt;
bisect.bisect_left(l, &lt;span class=&quot;synConstant&quot;&gt;&#39;Z&#39;&lt;/span&gt;);
&lt;/pre&gt;




&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; bisect
&amp;gt;&amp;gt;&amp;gt; l = [&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;D&#39;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;E&#39;&lt;/span&gt;] &lt;span class=&quot;synComment&quot;&gt;# 予めソートしておくこと&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; bisect.bisect_left(l, &lt;span class=&quot;synConstant&quot;&gt;&#39;Z&#39;&lt;/span&gt;);
&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;
&lt;/pre&gt;


&lt;h2&gt;二分探索&lt;/h2&gt;

&lt;p&gt;　中間にある値より小さいか大きいかを繰り返すことで、高速に検索できる。&lt;/p&gt;

&lt;h3&gt;追ってみる&lt;/h3&gt;

&lt;p&gt;　こんな感じで検索するはず。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;位置&lt;/th&gt;
&lt;th&gt;リスト&lt;/th&gt;
&lt;th&gt;検索位置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;←&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;ol&gt;
&lt;li&gt;先頭&lt;code&gt;A&lt;/code&gt;〜末尾&lt;code&gt;I&lt;/code&gt;の中間を探す&lt;/li&gt;
&lt;li&gt;中間が探索値ならインデックスを返して終了する&lt;/li&gt;
&lt;li&gt;中間が探索値より小さいなら、先頭〜中間-1の範囲内でこれをくりかえす&lt;/li&gt;
&lt;li&gt;中間が探索値より大きいなら、中間+1〜末尾の範囲内でこれをくりかえす&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;　探索値&lt;code&gt;D&lt;/code&gt;は中間値&lt;code&gt;E&lt;/code&gt;より小さい。よって、先頭&lt;code&gt;A&lt;/code&gt;〜中間-1&lt;code&gt;D&lt;/code&gt;の範囲を対象に、これをくりかえす。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;位置&lt;/th&gt;
&lt;th&gt;リスト&lt;/th&gt;
&lt;th&gt;検索位置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;←&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　偶数のため中間はない。そこで中間-1を中間とする。&lt;/p&gt;

&lt;p&gt;　検索対象&lt;code&gt;D&lt;/code&gt;は中間値&lt;code&gt;B&lt;/code&gt;より大きい。よって、中間+1&lt;code&gt;C&lt;/code&gt;〜末尾の範囲を対象に、これをくりかえす。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;位置&lt;/th&gt;
&lt;th&gt;リスト&lt;/th&gt;
&lt;th&gt;検索位置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;←&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　偶数のため中間はない。そこで中間-1を中間とする。&lt;/p&gt;

&lt;p&gt;　検索対象&lt;code&gt;D&lt;/code&gt;は中間値&lt;code&gt;C&lt;/code&gt;より大きい。よって、中間+1&lt;code&gt;D&lt;/code&gt;〜末尾の範囲を対象に、これをくりかえす。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;位置&lt;/th&gt;
&lt;th&gt;リスト&lt;/th&gt;
&lt;th&gt;検索位置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;←&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　1件しかないため中間値はない。検索対象に一致するならインデックスを返す。さもなくば&lt;code&gt;None&lt;/code&gt;なり&lt;code&gt;-1&lt;/code&gt;なり例外なり、無効を意味する値を返す。&lt;/p&gt;

&lt;p&gt;　検索対象&lt;code&gt;D&lt;/code&gt;に一致。これのインデックス&lt;code&gt;3&lt;/code&gt;を返す。&lt;/p&gt;

&lt;p&gt;　&lt;small&gt;今回の場合、4回目でヒット。これは先頭から順にやったのと同じ回数。ぜんぜん高速じゃない。が、件数が増えるほど、二分探索のほうが少なくて済むはず。&lt;/small&gt;&lt;/p&gt;

&lt;h1&gt;keyを使いたい&lt;/h1&gt;

&lt;p&gt;　複数のキーを対象に位置検索したい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27672494/how-to-use-bisect-insort-left-with-a-key&quot;&gt;https://stackoverflow.com/questions/27672494/how-to-use-bisect-insort-left-with-a-key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　できないことはないのかもしれない。でもよくわからない。コードもわけわからんくなる。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Python&quot;&gt;Python&lt;/a&gt;あるある。&lt;/p&gt;

&lt;p&gt;　どうしよう……。&lt;/p&gt;

&lt;h2&gt;複数キーは不可&lt;/h2&gt;

&lt;p&gt;　以下のように公開日時とURLの2キーで一意確認したいのだが、できない。これだとO(N)操作となり高速でなくなるようだ……。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;ins_idx = bisect.bisect_left(news_ids, (db_latest_published, db_latest_url))
&lt;/pre&gt;


&lt;p&gt;　それなら&lt;code&gt;list.index(探索値)&lt;/code&gt;でいいわ。&lt;/p&gt;

&lt;h1&gt;結論&lt;/h1&gt;

&lt;p&gt;　二分探索は複数キーで使えない。&lt;/p&gt;

&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-20T13:29:04+0900&quot; title=&quot;実施日&quot;&gt;2019-09-20&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;


&lt;h1&gt;前回まで&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/21/000000&quot;&gt;NewsApiを使ってみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/27/000000&quot;&gt;NewsApiでカテゴリ別にニュースを取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/28/000000&quot;&gt;NewsApiで得たニュースを重複なく取り込む方法を考える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/29/000000&quot;&gt;NewsApiで得たニュースを保存するSQLite3テーブルを考える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/30/000000&quot;&gt;NewsApiのJSONからSQLite3DBファイルへ挿入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/01/000000&quot;&gt;SQLite3に登録済みのNewsApiデータから最新を取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/02/000000&quot;&gt;NewsApiのJSONからSQLite3DBファイルへ挿入する（未登録のみ）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/03/000000&quot;&gt;HTMLから本文テキストだけを抽出したい（python-extractcontent）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/05/000000&quot;&gt;HTMLから本文を抽出してフォーマットする（改行＋全角スペース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/06/000000&quot;&gt;NewsApiのURLから本文を抽出してSQLite3に挿入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/09/000000&quot;&gt;ニュースサイトを探す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/10/000000&quot;&gt;PythonでRSSを取得する（feedparser）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/11/000000&quot;&gt;PythonでのWebスクレイピング環境構築（chromium-driver,selenium,beautifulsoup4）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/12/000000&quot;&gt;PythonでRSSからHTMLの本文を抽出してSQLite3に挿入する（重複してしまう版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/13/000000&quot;&gt;Pythonでソート（複数キーでdescとasc混在）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</hatena:formatted-content>

<category term="Python" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-13574176438021987712</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/13574176438021987712"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/13/222222"/>
<author><name>ytyaru</name></author>
<title>お風呂での過ごし方：アカ飛ばし</title>
<updated>2021-10-13T22:22:22+09:00</updated>
<published>2021-10-13T22:22:22+09:00</published>
<app:edited>2021-10-13T22:22:22+09:00</app:edited>
<summary type="text">今週のお題「お風呂での過ごし方」に答える。</summary>
<content type="text/x-markdown">　今週のお題「お風呂での過ごし方」に答える。

&lt;!-- more --&gt;

# どうでもよくね？

　お風呂での過ごし方って、どうでも良くない？

　まず真っ先にそう思ってしまった。

　私自身、考えたこともないし。知りたい人もいないだろう。もし私がかわいい綺麗なお姉さんで顔出しもしていたら変態紳士たちが「知りたい！」と思うことはあるかもしれないけど。

　私は[今月の目標：今週のお題で記事を書く][]ことにしたので、スルーはしなかった。書くことなんて何もないが、なんとかして書いてみようと思った。いつもは絶対にそんなことしないので、新鮮だった。このチャレンジ、必ずや成功してみせる。

[今月の目標：今週のお題で記事を書く]:https://ytyaru.hatenablog.com/entry/2021/10/04/222222

　私は考えた。どうでもいいお題なら、記事の内容もすごくどうでもいいことを書いてやろう、と。

# お風呂での過ごし方

　どこを先に洗うとか、どんな入浴剤を使っているとか。観点としてはそんなところだろうか？　やはり死ぬほどどうでもいい。私ならそんなこと誰かに聞こうとも思わないし興味もない。よくこんなことを話題として提案できるなと関心する。嫌味ではなく本当に。

　でもそれではダメだ。下らないことすぎるせいで、逆に興味が出てしまう。なんとかして、真にどうでもいい話にしなくてはならない。

## はてな視点

　ピンとこないので、まずははてなを参考にした。次のようなことが書いてある。

&gt; 段々と涼しい日が増えてくるこの季節。リラックスタイムといえば、お風呂ですよね。今週は、「お風呂での過ごし方」をテーマに投稿を募集します。「お風呂ルーティーン」や「こだわりの入浴剤」「あったら便利なお風呂グッズ」まで……。さまざまな投稿、お待ちしています！

　お風呂ルーティーンってなんだよ。絶対ルーティーンって言いたいだけだろ。いちいち格好つけやがって。おまえは風呂で五郎丸ポーズでもとっているのかよ。全裸でそんなんされたら面白すぎるだろ。どうでもいいお題とかいってすみませんでした。でもそれじゃダメだ。どうでもいい話じゃないとダメなんだ。

　入浴剤とかグッズとか、金儲けに絡めようとするのがウザい。そういうの見ても面白くもなんともない。見たくもない広告を見せつけられる不快感といったらない。リラックスできない。イラックソしてしまう。あと入浴剤なんていらないしグッズとか舐めてんのかと思う。タオルと石鹸とシャンプーがあればそれでいいんだよ。リンスとかいらないんだよ。

　私だったら「風呂でやる個人的なクセ」とか、そういう話題のほうが面白そうだと思う。なにより、すごくどうでもいい。どうでもよさ加減がハンパない。そんな話題にされても困るレベルでどうでもいい。でもそれでいい。どうせなら中途半端に金儲けや役に立つようなことを書くより、死ぬほどどうでもいいことを書いたほうがお題の主旨に沿っているはずだ。なので私はそういう路線で書いてみることにした。

## アカ飛ばし

　汚い話だけど、風呂に入ったら浴槽に垢が浮きませんか？

　私が汚いだけなのでしょう。体を洗っても垢が浮くことがよくあります。

　浮いた垢、気になりませんか？　私は気になります。なので水面を素早く手の平ではじいて飛ばします。

　桶で掬ったら負けです。だって桶が汚れるじゃないですか。

　いや、わかってますよ？　浴槽ごと汚れているし、もう自分本体が汚いし、洗っても拭いきれないほどに垢まみれなのでどうにもならないわけで。だからこそ浴槽が最後の砦なんです。そこで浮いた垢はつまり、最後までこびりついていた垢です。タオル、石鹸、ボディシャンプーごときでは決して落とせない垢があるんです。その汚さといったら折り紙付きなわけです。どんだけだよってなるんです。だからもう飛ばさざるを得ない。弾かざるを得ないんです。風呂の垢BAN祭り。年中無休で開催中。

# 風呂なら綺麗な話と思った？

　きっとこんな汚い話を書くのは私だけに違いない。皆さんはもっと綺麗でスマートで上品でカネになるような記事を書くのでしょうね。自分をブランディングしたり、商品を売りつけてマージンを獲得しようとするような記事を書くのでしょうね。

　はたして私の記事とその記事、どちらが汚いのでしょうか。たしかに私の体と記事は汚いです。でも決してカネに汚くはありません。その点においては身の潔白を証明させていただきます。いわば心が清いのです。体は穢れていたとしても、心だけは汚れていないんです。

　また、私は決して嘘偽りなど申しておりません。すべて真実です。決して話を捏造していません。この間もアカ飛ばしをやったばかりです。さすがに垢まみれの浴槽の写真をアップするのは公序良俗に反すると思うのでやりませんが。決して自分を良く見せようとして嘘を付いたり、マウントをとろうとしたり、オシャレ自慢もしていません。むしろ自分の民度の低さを曝け出し、笑えない汚さを露呈しました。得るものは何もありません。人としての嫌悪感を撒き散らすばかりの迷惑行為でしかないでしょう。

　素直に嫌える。それはとてもとても気持ちいいこと。

　風呂といえば綺麗なことではなく、気持ちいいことだと思うのです。

　気持ちいいでしょう？　人を見下せるって、気持ちいいでしょう？

　私よりもひどい風呂の過し方をしている人なんていないでしょう。仮にいたとしても、そんなことをわざわざブログに書く人はいないに決まっています。いたら教えてください。嘲笑いに行きます。

&lt;a id=&quot;target-environment&quot;&gt;&lt;/a&gt;
# [対象環境](#target-environment)

* &lt;time datetime=&quot;2021-10-13T09:10:05+0900&quot; title=&quot;実施日&quot;&gt;2021-10-13&lt;/time&gt;
</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　&lt;a class=&quot;keyword&quot; href=&quot;https://blog.hatena.ne.jp/-/campaign/odai&quot;&gt;今週のお題&lt;/a&gt;「お風呂での過ごし方」に答える。&lt;/p&gt;

&lt;h1&gt;どうでもよくね？&lt;/h1&gt;

&lt;p&gt;　お風呂での過ごし方って、どうでも良くない？&lt;/p&gt;

&lt;p&gt;　まず真っ先にそう思ってしまった。&lt;/p&gt;

&lt;p&gt;　私自身、考えたこともないし。知りたい人もいないだろう。もし私がかわいい綺麗なお姉さんで顔出しもしていたら変態紳士たちが「知りたい！」と思うことはあるかもしれないけど。&lt;/p&gt;

&lt;p&gt;　私は&lt;a href=&quot;https://ytyaru.hatenablog.com/entry/2021/10/04/222222&quot;&gt;今月の目標：今週のお題で記事を書く&lt;/a&gt;ことにしたので、スルーはしなかった。書くことなんて何もないが、なんとかして書いてみようと思った。いつもは絶対にそんなことしないので、新鮮だった。このチャレンジ、必ずや成功してみせる。&lt;/p&gt;

&lt;p&gt;　私は考えた。どうでもいいお題なら、記事の内容もすごくどうでもいいことを書いてやろう、と。&lt;/p&gt;

&lt;h1&gt;お風呂での過ごし方&lt;/h1&gt;

&lt;p&gt;　どこを先に洗うとか、どんな入浴剤を使っているとか。観点としてはそんなところだろうか？　やはり死ぬほどどうでもいい。私ならそんなこと誰かに聞こうとも思わないし興味もない。よくこんなことを話題として提案できるなと関心する。嫌味ではなく本当に。&lt;/p&gt;

&lt;p&gt;　でもそれではダメだ。下らないことすぎるせいで、逆に興味が出てしまう。なんとかして、真にどうでもいい話にしなくてはならない。&lt;/p&gt;

&lt;h2&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA&quot;&gt;はてな&lt;/a&gt;視点&lt;/h2&gt;

&lt;p&gt;　ピンとこないので、まずは&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA&quot;&gt;はてな&lt;/a&gt;を参考にした。次のようなことが書いてある。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;段々と涼しい日が増えてくるこの季節。リラックスタイムといえば、お風呂ですよね。今週は、「お風呂での過ごし方」をテーマに投稿を募集します。「お風呂ルー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C6%A5%A3%A1%BC&quot;&gt;ティー&lt;/a&gt;ン」や「こだわりの入浴剤」「あったら便利なお風呂グッズ」まで……。さまざまな投稿、お待ちしています！&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;　お風呂ルー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C6%A5%A3%A1%BC&quot;&gt;ティー&lt;/a&gt;ンってなんだよ。絶対ルー&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C6%A5%A3%A1%BC&quot;&gt;ティー&lt;/a&gt;ンって言いたいだけだろ。いちいち格好つけやがって。おまえは風呂で五郎丸ポーズでもとっているのかよ。全裸でそんなんされたら面白すぎるだろ。どうでもいいお題とかいってすみませんでした。でもそれじゃダメだ。どうでもいい話じゃないとダメなんだ。&lt;/p&gt;

&lt;p&gt;　入浴剤とかグッズとか、金儲けに絡めようとするのがウザい。そういうの見ても面白くもなんともない。見たくもない広告を見せつけられる不快感といったらない。リラックスできない。イラックソしてしまう。あと入浴剤なんていらないしグッズとか舐めてんのかと思う。タオルと石鹸とシャンプーがあればそれでいいんだよ。リンスとかいらないんだよ。&lt;/p&gt;

&lt;p&gt;　私だったら「風呂でやる個人的なクセ」とか、そういう話題のほうが面白そうだと思う。なにより、すごくどうでもいい。どうでもよさ加減がハンパない。そんな話題にされても困るレベルでどうでもいい。でもそれでいい。どうせなら中途半端に金儲けや役に立つようなことを書くより、死ぬほどどうでもいいことを書いたほうがお題の主旨に沿っているはずだ。なので私はそういう路線で書いてみることにした。&lt;/p&gt;

&lt;h2&gt;アカ飛ばし&lt;/h2&gt;

&lt;p&gt;　汚い話だけど、風呂に入ったら浴槽に垢が浮きませんか？&lt;/p&gt;

&lt;p&gt;　私が汚いだけなのでしょう。体を洗っても垢が浮くことがよくあります。&lt;/p&gt;

&lt;p&gt;　浮いた垢、気になりませんか？　私は気になります。なので水面を素早く手の平ではじいて飛ばします。&lt;/p&gt;

&lt;p&gt;　桶で掬ったら負けです。だって桶が汚れるじゃないですか。&lt;/p&gt;

&lt;p&gt;　いや、わかってますよ？　浴槽ごと汚れているし、もう自分本体が汚いし、洗っても拭いきれないほどに垢まみれなのでどうにもならないわけで。だからこそ浴槽が最後の砦なんです。そこで浮いた垢はつまり、最後までこびりついていた垢です。タオル、石鹸、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%DC%A5%C7%A5%A3%A5%B7%A5%E3%A5%F3%A5%D7%A1%BC&quot;&gt;ボディシャンプー&lt;/a&gt;ごときでは決して落とせない垢があるんです。その汚さといったら折り紙付きなわけです。どんだけだよってなるんです。だからもう飛ばさざるを得ない。弾かざるを得ないんです。風呂の垢BAN祭り。年中無休で開催中。&lt;/p&gt;

&lt;h1&gt;風呂なら綺麗な話と思った？&lt;/h1&gt;

&lt;p&gt;　きっとこんな汚い話を書くのは私だけに違いない。皆さんはもっと綺麗でスマートで上品でカネになるような記事を書くのでしょうね。自分を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%D6%A5%E9%A5%F3%A5%C7%A5%A3%A5%F3%A5%B0&quot;&gt;ブランディング&lt;/a&gt;したり、商品を売りつけてマージンを獲得しようとするような記事を書くのでしょうね。&lt;/p&gt;

&lt;p&gt;　はたして私の記事とその記事、どちらが汚いのでしょうか。たしかに私の体と記事は汚いです。でも決してカネに汚くはありません。その点においては身の潔白を証明させていただきます。いわば心が清いのです。体は穢れていたとしても、心だけは汚れていないんです。&lt;/p&gt;

&lt;p&gt;　また、私は決して嘘偽りなど申しておりません。すべて真実です。決して話を捏造していません。この間もアカ飛ばしをやったばかりです。さすがに垢まみれの浴槽の写真をアップするのは&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B8%F8%BD%F8%CE%C9%C2%AF&quot;&gt;公序良俗&lt;/a&gt;に反すると思うのでやりませんが。決して自分を良く見せようとして嘘を付いたり、マウントをとろうとしたり、オシャレ自慢もしていません。むしろ自分の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CC%B1%C5%D9&quot;&gt;民度&lt;/a&gt;の低さを曝け出し、笑えない汚さを露呈しました。得るものは何もありません。人としての嫌悪感を撒き散らすばかりの迷惑行為でしかないでしょう。&lt;/p&gt;

&lt;p&gt;　素直に嫌える。それはとてもとても気持ちいいこと。&lt;/p&gt;

&lt;p&gt;　風呂といえば綺麗なことではなく、気持ちいいことだと思うのです。&lt;/p&gt;

&lt;p&gt;　気持ちいいでしょう？　人を見下せるって、気持ちいいでしょう？&lt;/p&gt;

&lt;p&gt;　私よりもひどい風呂の過し方をしている人なんていないでしょう。仮にいたとしても、そんなことをわざわざブログに書く人はいないに決まっています。いたら教えてください。嘲笑いに行きます。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;target-environment&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;&lt;a href=&quot;#target-environment&quot;&gt;対象環境&lt;/a&gt;&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2021-10-13T09:10:05+0900&quot; title=&quot;実施日&quot;&gt;2021-10-13&lt;/time&gt;&lt;/li&gt;
&lt;/ul&gt;

</hatena:formatted-content>

<category term="今週のお題" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613437035846</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613437035846"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/13/000000"/>
<author><name>ytyaru</name></author>
<title>Pythonでソート（複数キーでdescとasc混在）</title>
<updated>2021-10-13T00:00:00+09:00</updated>
<published>2021-10-13T00:00:34+09:00</published>
<app:edited>2021-10-13T00:00:34+09:00</app:edited>
<summary type="text">1キーずつ。ソート順位が低いほうから順に。</summary>
<content type="text/x-markdown">　1キーずつ。ソート順位が低いほうから順に。

&lt;!-- more --&gt;

# 成果物

* [github](https://github.com/ytyaru/Python.Sort.Keys.Desc.Asc.Mixed.20190920131341)

# 情報源

* https://stackoverflow.com/questions/11476371/sort-by-multiple-keys-using-different-orderings
	* https://lists.gt.net/python/python/539884

# コード

## 要素がタプル型

```python
import operator
names=[(1,&#39;A&#39;),(2,&#39;B&#39;),(2,&#39;A&#39;),(1,&#39;C&#39;)]
print(names)
names.sort(key=operator.itemgetter(1)) # 第2キー
print(names)
names.sort(key=operator.itemgetter(0), reverse=True) # 第1キー
print(names)
```
```python
&gt;&gt;&gt; import operator
&gt;&gt;&gt; names=[(1,&#39;A&#39;),(2,&#39;B&#39;),(2,&#39;A&#39;),(1,&#39;C&#39;)]
&gt;&gt;&gt; print(names)
[(1, &#39;A&#39;), (2, &#39;B&#39;), (2, &#39;A&#39;), (1, &#39;C&#39;)]
&gt;&gt;&gt; names.sort(key=operator.itemgetter(1)) # 第2キー
&gt;&gt;&gt; print(names)
[(1, &#39;A&#39;), (2, &#39;A&#39;), (2, &#39;B&#39;), (1, &#39;C&#39;)]
&gt;&gt;&gt; names.sort(key=operator.itemgetter(0), reverse=True) # 第1キー
&gt;&gt;&gt; print(names)
[(2, &#39;A&#39;), (2, &#39;B&#39;), (1, &#39;A&#39;), (1, &#39;C&#39;)]
```

　ポイントはソートの優先順位が低い順に`sort`すること。

## 要素がdict型

　リスト要素が`dict`型なら、`operator.itemgetter(&#39;キー名&#39;)`のように指定することができる。

```python
import operator
players=[{&#39;point&#39;: 0, &#39;name&#39;: &#39;A&#39;},{&#39;point&#39;: 5, &#39;name&#39;: &#39;B&#39;},{&#39;point&#39;: 5, &#39;name&#39;: &#39;A&#39;},]
print(players)
players.sort(key=operator.itemgetter(&#39;name&#39;)) # 第2キー: name asc
print(players)
players.sort(key=operator.itemgetter(&#39;point&#39;), reverse=True) # 第1キー: point desc
print(players)
```
```python
&gt;&gt;&gt; import operator
&gt;&gt;&gt; players=[{&#39;point&#39;: 0, &#39;name&#39;: &#39;A&#39;},{&#39;point&#39;: 5, &#39;name&#39;: &#39;B&#39;},{&#39;point&#39;: 5, &#39;name&#39;: &#39;A&#39;},]
&gt;&gt;&gt; print(players)
[{&#39;point&#39;: 0, &#39;name&#39;: &#39;A&#39;}, {&#39;point&#39;: 5, &#39;name&#39;: &#39;B&#39;}, {&#39;point&#39;: 5, &#39;name&#39;: &#39;A&#39;}]
&gt;&gt;&gt; players.sort(key=operator.itemgetter(&#39;name&#39;)) # 第2キー: name asc
&gt;&gt;&gt; print(players)
[{&#39;point&#39;: 0, &#39;name&#39;: &#39;A&#39;}, {&#39;point&#39;: 5, &#39;name&#39;: &#39;A&#39;}, {&#39;point&#39;: 5, &#39;name&#39;: &#39;B&#39;}]
&gt;&gt;&gt; players.sort(key=operator.itemgetter(&#39;point&#39;), reverse=True) # 第1キー: point desc
&gt;&gt;&gt; print(players)
[{&#39;point&#39;: 5, &#39;name&#39;: &#39;A&#39;}, {&#39;point&#39;: 5, &#39;name&#39;: &#39;B&#39;}, {&#39;point&#39;: 0, &#39;name&#39;: &#39;A&#39;}]
```

# 対象環境

* &lt;time datetime=&quot;2019-09-20T13:05:02+0900&quot; title=&quot;実施日&quot;&gt;2019-09-20&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)
* Python 3.5.3

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　1キーずつ。ソート順位が低いほうから順に。&lt;/p&gt;

&lt;h1&gt;成果物&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ytyaru/Python.Sort.Keys.Desc.Asc.Mixed.20190920131341&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;情報源&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11476371/sort-by-multiple-keys-using-different-orderings&quot;&gt;https://stackoverflow.com/questions/11476371/sort-by-multiple-keys-using-different-orderings&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lists.gt.net/python/python/539884&quot;&gt;https://lists.gt.net/python/python/539884&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;コード&lt;/h1&gt;

&lt;h2&gt;要素がタプル型&lt;/h2&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; operator
names=[(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;)]
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(names)
names.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;synComment&quot;&gt;# 第2キー&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(names)
names.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;), reverse=&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# 第1キー&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(names)
&lt;/pre&gt;




&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; operator
&amp;gt;&amp;gt;&amp;gt; names=[(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;)]
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(names)
[(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;)]
&amp;gt;&amp;gt;&amp;gt; names.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;synComment&quot;&gt;# 第2キー&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(names)
[(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;)]
&amp;gt;&amp;gt;&amp;gt; names.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;), reverse=&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# 第1キー&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(names)
[(&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;), (&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;)]
&lt;/pre&gt;


&lt;p&gt;　ポイントはソートの優先順位が低い順に&lt;code&gt;sort&lt;/code&gt;すること。&lt;/p&gt;

&lt;h2&gt;要素がdict型&lt;/h2&gt;

&lt;p&gt;　リスト要素が&lt;code&gt;dict&lt;/code&gt;型なら、&lt;code&gt;operator.itemgetter(&#39;キー名&#39;)&lt;/code&gt;のように指定することができる。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; operator
players=[{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;},{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;},{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;},]
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(players)
players.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;)) &lt;span class=&quot;synComment&quot;&gt;# 第2キー: name asc&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(players)
players.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;), reverse=&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# 第1キー: point desc&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(players)
&lt;/pre&gt;




&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; operator
&amp;gt;&amp;gt;&amp;gt; players=[{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;},{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;},{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;},]
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(players)
[{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;}, {&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;}, {&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;}]
&amp;gt;&amp;gt;&amp;gt; players.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;)) &lt;span class=&quot;synComment&quot;&gt;# 第2キー: name asc&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(players)
[{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;}, {&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;}, {&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;}]
&amp;gt;&amp;gt;&amp;gt; players.sort(key=operator.itemgetter(&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;), reverse=&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;synComment&quot;&gt;# 第1キー: point desc&lt;/span&gt;
&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(players)
[{&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;}, {&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;}, {&lt;span class=&quot;synConstant&quot;&gt;&#39;point&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&#39;name&#39;&lt;/span&gt;: &lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;}]
&lt;/pre&gt;


&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-20T13:05:02+0900&quot; title=&quot;実施日&quot;&gt;2019-09-20&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Python&quot;&gt;Python&lt;/a&gt; 3.5.3&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;

</hatena:formatted-content>

<category term="Python" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613436993659</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613436993659"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/12/000000"/>
<author><name>ytyaru</name></author>
<title>PythonでRSSからHTMLの本文を抽出してSQLite3に挿入する（重複してしまう版）</title>
<updated>2021-10-12T00:00:00+09:00</updated>
<published>2021-10-12T00:00:37+09:00</published>
<app:edited>2021-10-12T00:00:37+09:00</app:edited>
<summary type="text">本文抽出がうまくいかないだろうから、1件だけ登録する。</summary>
<content type="text/x-markdown">　本文抽出がうまくいかないだろうから、1件だけ登録する。

&lt;!-- more --&gt;

# 成果物

* [github](https://github.com/ytyaru/Python.Rss.Html.Extract.SQLite3.Insert.All.20190920090422)

# ソフトウェア構成

* run.sh
* get_news.py
* mod/
	* NewsDb.py
	* NewsImagesDb.py
	* get_html.py
	* HtmlContentExtractor.py

# 出力結果

　カレントディレクトリにSQLite3のDBファイル`news.db`が作成される。内容は指定したRSSの公開日時、URL、タイトル、本文。

## コード

### run.sh

　Pythonコードを実行するためのシェルスクリプト。ターミナルで実行したときのカレントディレクトリを渡すのが主な仕事。

```sh
[ $# -lt 1 ] &amp;&amp; { echo &#39;第1引数にRSSのURLを指定してください。&#39; 1&gt;&amp;2; exit 1; }
SCRIPT_DIR=$(cd $(dirname $0); pwd)
cd &quot;$SCRIPT_DIR&quot;
python3 get_news.py &quot;$1&quot; &quot;$SCRIPT_DIR&quot;
```

　使うときは以下。

```sh
run.sh 任意RSSのURL
```

### get_news.py

　ニュースを取得してSQLite3へ保存する。

```python
#!/usr/bin/env python3
# coding: utf8
import feedparser
import datetime
import sys
from mod import get_html
from mod import NewsDb
from mod import NewsImagesDb
from mod import HtmlContentExtractor

if len(sys.argv) &lt; 2:
    raise Error(&#39;第1引数にRSSのURLを指定してください。&#39;)
    exit()
if len(sys.argv) &lt; 3:
    raise Error(&#39;第2引数にSQLite3DBルートパスを指定してください。&#39;)
    exit()
rss = sys.argv[1]
db_dir_path = sys.argv[2]

entries = feedparser.parse(rss).entries
news_db = NewsDb.NewsDb(db_dir_path)
extractor = HtmlContentExtractor.HtmlContentExtractor()
for entry in entries:
    published = (datetime.datetime
        .strptime(entry.published, 
                  &#39;%a, %d %b %Y %H:%M:%S %z&#39;)
        .strftime(&#39;%Y-%m-%dT%H:%M:%SZ%z&#39;))
    url = entry.link
    title = entry.title
    body = extractor.extract(get_html.get_html(url))
    news_db.append_insert_stmt(published, url, title, body);
    break; # HTML取得を1件だけでやめる
news_db.insert();
```

### NewsDb.py

　ニュース用DB。テーブル作成とレコード挿入する。

```python
import sqlite3
import os

class NewsDb:
    def __init__(self, root):
        path = os.path.join(root, &#39;news.db&#39;)
        self.conn = sqlite3.connect(path)
        self.create_table()
        self.stmts = []
    def __del__(self): self.conn.close()
    def create_table(self):    
        cur = self.conn.cursor()
        cur.executescript(self.__create_table_sql())
    def __create_table_sql(self):
        return &#39;&#39;&#39;
create table if not exists news(
  id         integer primary key,
  published  text,
  url        text,
  title      text,
  body       text  -- URL先から本文だけを抽出したプレーンテキスト
);
create index if not exists idx_news on 
  news(published desc, id desc, url, title);
create table if not exists sources(
  id       integer primary key,
  domain   text, -- URLのドメイン名
  name     text, -- 情報源名
  created  text  -- 登録日時（同一ドメイン名が複数あるとき新しいほうを表示する）
);
create index if not exists idx_sources on 
  sources(domain, created desc, id desc, name);
&#39;&#39;&#39;
    def __insert_sql(self): 
        return &#39;insert into news(published,url,title,body) values(?,?,?,?)&#39;
    def append_insert_stmt(self, published, url, title, body):
        self.stmts.append((published, url, title, body))
    def insert(self):
        if 0 == len(self.stmts): return
        try:
            cur = self.conn.cursor()
            cur.executemany(self.__insert_sql(), self.stmts)
            self.conn.commit()
            self.stmts.clear()
        except: 
            import traceback
            traceback.print_exc()
            self.conn.rollback()
```

### NewsImagesDb.py

　ニュース画像用DB。今回は使っていない。

```python
import sqlite3
import os

class NewsImagesDb:
    def __init__(self, root):
        path = os.path.join(root, &#39;news_images.db&#39;)
        self.conn = sqlite3.connect()
        self.create_table()
        self.stmts = []
    def __del__(self): self.conn.close()
    def create_table(self):    
        cur = self.conn.cursor()
        cur.execute(self.__create_table_sql())
    def __create_table_sql(self):
        return &#39;&#39;&#39;
create table if not exists images(
  news_id integer, -- どの記事に対応した画像か
  url     text,    -- 拡張子も含めているはず。これ重要
  image   blob     -- バイナリ
);&#39;&#39;&#39;
    def append_insert_stmt(self, news_id, url, image):
        self.stmts.append(&quot;insert into images(news_id, url, image) values(&quot;
            + &quot;&#39;&quot; + news_id + &quot;&#39;,&quot;
            + &quot;&#39;&quot; + url       + &quot;&#39;,&quot;
            + &quot;&#39;&quot; + image      + &quot;&#39;&quot;
            + &quot;);&quot;);
    def insert(self):
        if 0 == len(self.stmts): return
        self.stmts.insert(0, &quot;begin;&quot;)
        self.stmts.append(&quot;end;&quot;)
        cur = self.conn.cursor()
        cur.execute(&quot;\n&quot;.join(stmts))
        self.stmts.clear()
```

### get_html.py

　URLからHTMLを取得する。UTF-8に変換して。

```python
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from bs4 import BeautifulSoup
import time

def get_html(url, wait_second=1):
    options = Options()
    options.set_headless(True)
    driver = webdriver.Chrome(chrome_options=options)
    driver.get(url)
    time.sleep(wait_second)
    html = driver.page_source.encode(&#39;utf-8&#39;).decode(&#39;utf-8&#39;)
    return html
```

### HtmlContentExtractor.py

　本文を抽出する。HTMLとプレーンテキスト形式で。

```python
import sys
import os
import extractcontent3

class HtmlContentExtractor:
    def __init__(self, option=None):
        self.__html = None
        self.__text = None
        self.__extractor = extractcontent3.ExtractContent()
        if option is not None: self.__extractor.set_option(option) # option = {&quot;threshold&quot;:50}
    @property
    def Html(self): return self.__html
    @property
    def Text(self): return self.__text
    def extract(self, html):
        self.__extractor.analyse(html)
#        text, title = extractor.as_text()
        self.__html, title = self.__extractor.as_html()
#        title = extractor.extract_title(html)
        self.__text = self.__format_to_text(html)
        return self.__text
    def __format_to_text(self, html):
        import re
        import unicodedata
        st = re.sub(r&quot;&lt;p&gt;([^　])&quot;, r&quot;　\1&quot;, html) # 段落の先頭は全角スペース
        st = re.sub(r&quot;&lt;/p&gt;&quot;, &quot;\n\n&quot;, st) # 段落の末尾は2つ改行する
        st = re.sub(r&quot;&lt;/br&gt;&quot;, &quot;\n&quot;, st)
        st = re.sub(r&quot;&lt;br&gt;&quot;, &quot;\n&quot;, st)
        st = re.sub(r&quot;&lt;.+?&gt;&quot;, &quot;&quot;, st)
        # Convert from wide character to ascii
        if st and type(st) != str: st = unicodedata.normalize(&quot;NFKC&quot;, st)
        st = re.sub(r&quot;[\u2500-\u253f\u2540-\u257f]&quot;, &quot;&quot;, st)  # 罫線(keisen)
#        st = re.sub(r&quot;&amp;(.*?);&quot;, lambda x: self.CHARREF.get(x.group(1), x.group()), st)
        st = re.sub(r&quot;[ \t]+&quot;, &quot; &quot;, st)
        return st.rstrip(&quot;\n\t &quot;)
    def __show_meta(self):
        print(&#39;extractcontent3 メタ情報&#39;)
        print(extractcontent3.__version__)
        print(extractcontent3.__file__)
        print(dir(extractcontent3))
```

# つまづきポイント

## sqlite3

```python
cur.execute(&#39;create table ...; ...;&#39;)
```
```sh
    cur.execute(self.__create_table_sql())
sqlite3.Warning: You can only execute one statement at a time.
```

　`execute`メソッドは1度に1ステートメントのみ実行可能。だが、それでは超低速になってしまう。

　`executemany`メソッドを使うべき。

```python
try:
	cur.executemany(&#39;insert into T(A,B) values(?,?)&#39;, [(0,&#39;A&#39;),(1,&#39;B&#39;),(2,&#39;C&#39;)])
	conn.commit()
except:
	conn.rollback()
```

　または、1度に複数のステートメントを実行させたいなら`executescript`メソッドを使う。

```python
cur.executescript(&#39;create table ...; ...;&#39;)
```

# 問題

* RSSによる違い
    * 日付フォーマット
    * 本文が取得できない
        * 会員登録、ログイン、「続きを読む」などに阻まれる

　この問題が致命的なため、DBに取り込むのは1件だけにしている。様子見。

# 対象環境

* &lt;time datetime=&quot;2019-09-19T15:34:06+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```

# 前回まで

* [NewsApiを使ってみた](http://ytyaru.hatenablog.com/entry/2021/09/21/000000)
* [NewsApiでカテゴリ別にニュースを取得する](http://ytyaru.hatenablog.com/entry/2021/09/27/000000)
* [NewsApiで得たニュースを重複なく取り込む方法を考える](http://ytyaru.hatenablog.com/entry/2021/09/28/000000)
* [NewsApiで得たニュースを保存するSQLite3テーブルを考える](http://ytyaru.hatenablog.com/entry/2021/09/29/000000)
* [NewsApiのJSONからSQLite3DBファイルへ挿入する](http://ytyaru.hatenablog.com/entry/2021/09/30/000000)
* [SQLite3に登録済みのNewsApiデータから最新を取得する](http://ytyaru.hatenablog.com/entry/2021/10/01/000000)
* [NewsApiのJSONからSQLite3DBファイルへ挿入する（未登録のみ）](http://ytyaru.hatenablog.com/entry/2021/10/02/000000)
* [HTMLから本文テキストだけを抽出したい（python-extractcontent）](http://ytyaru.hatenablog.com/entry/2021/10/03/000000)
* [HTMLから本文を抽出してフォーマットする（改行＋全角スペース）](http://ytyaru.hatenablog.com/entry/2021/10/05/000000)
* [NewsApiのURLから本文を抽出してSQLite3に挿入する](http://ytyaru.hatenablog.com/entry/2021/10/06/000000)
* [ニュースサイトを探す](http://ytyaru.hatenablog.com/entry/2021/10/09/000000)
* [PythonでRSSを取得する（feedparser）](http://ytyaru.hatenablog.com/entry/2021/10/10/000000)
* [PythonでのWebスクレイピング環境構築（chromium-driver,selenium,beautifulsoup4）](http://ytyaru.hatenablog.com/entry/2021/10/11/000000)
</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　本文抽出がうまくいかないだろうから、1件だけ登録する。&lt;/p&gt;

&lt;h1&gt;成果物&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ytyaru/Python.Rss.Html.Extract.SQLite3.Insert.All.20190920090422&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;ソフトウェア構成&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;run.sh&lt;/li&gt;
&lt;li&gt;get_news.py&lt;/li&gt;
&lt;li&gt;mod/

&lt;ul&gt;
&lt;li&gt;NewsDb.py&lt;/li&gt;
&lt;li&gt;NewsImagesDb.py&lt;/li&gt;
&lt;li&gt;get_html.py&lt;/li&gt;
&lt;li&gt;HtmlContentExtractor.py&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;出力結果&lt;/h1&gt;

&lt;p&gt;　カレント&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C7%A5%A3%A5%EC%A5%AF%A5%C8&quot;&gt;ディレクト&lt;/a&gt;リにSQLite3のDBファイル&lt;code&gt;news.db&lt;/code&gt;が作成される。内容は指定した&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;の公開日時、URL、タイトル、本文。&lt;/p&gt;

&lt;h2&gt;コード&lt;/h2&gt;

&lt;h3&gt;run.sh&lt;/h3&gt;

&lt;p&gt;　&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Python&quot;&gt;Python&lt;/a&gt;コードを実行するための&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B7%A5%A7%A5%EB%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8&quot;&gt;シェルスクリプト&lt;/a&gt;。ターミナルで実行したときのカレント&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C7%A5%A3%A5%EC%A5%AF%A5%C8&quot;&gt;ディレクト&lt;/a&gt;リを渡すのが主な仕事。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;synPreProc&quot;&gt;$#&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;-lt&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;]&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;第1引数にRSSのURLを指定してください。&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; 1&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&amp;amp;2;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;SCRIPT_DIR&lt;/span&gt;=&lt;span class=&quot;synPreProc&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;dirname &lt;span class=&quot;synPreProc&quot;&gt;$0)&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;synStatement&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;$SCRIPT_DIR&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;
python3 get_news.py &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;$SCRIPT_DIR&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;　使うときは以下。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;run.sh 任意RSSのURL
&lt;/pre&gt;


&lt;h3&gt;get_news.py&lt;/h3&gt;

&lt;p&gt;　ニュースを取得してSQLite3へ保存する。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# coding: utf8&lt;/span&gt;
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; feedparser
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; datetime
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; sys
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; mod &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; get_html
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; mod &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; NewsDb
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; mod &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; NewsImagesDb
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; mod &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; HtmlContentExtractor

&lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(sys.argv) &amp;lt; &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;raise&lt;/span&gt; Error(&lt;span class=&quot;synConstant&quot;&gt;&#39;第1引数にRSSのURLを指定してください。&#39;&lt;/span&gt;)
    exit()
&lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(sys.argv) &amp;lt; &lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;raise&lt;/span&gt; Error(&lt;span class=&quot;synConstant&quot;&gt;&#39;第2引数にSQLite3DBルートパスを指定してください。&#39;&lt;/span&gt;)
    exit()
rss = sys.argv[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]
db_dir_path = sys.argv[&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;]

entries = feedparser.parse(rss).entries
news_db = NewsDb.NewsDb(db_dir_path)
extractor = HtmlContentExtractor.HtmlContentExtractor()
&lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; entry &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; entries:
    published = (datetime.datetime
        .strptime(entry.published, 
                  &lt;span class=&quot;synConstant&quot;&gt;&#39;%a, %d %b %Y %H:%M:%S %z&#39;&lt;/span&gt;)
        .strftime(&lt;span class=&quot;synConstant&quot;&gt;&#39;%Y-%m-%dT%H:%M:%SZ%z&#39;&lt;/span&gt;))
    url = entry.link
    title = entry.title
    body = extractor.extract(get_html.get_html(url))
    news_db.append_insert_stmt(published, url, title, body);
    &lt;span class=&quot;synStatement&quot;&gt;break&lt;/span&gt;; &lt;span class=&quot;synComment&quot;&gt;# HTML取得を1件だけでやめる&lt;/span&gt;
news_db.insert();
&lt;/pre&gt;


&lt;h3&gt;NewsDb.py&lt;/h3&gt;

&lt;p&gt;　ニュース用DB。テーブル作成とレコード挿入する。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; sqlite3
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; os

&lt;span class=&quot;synStatement&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;NewsDb&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__init__&lt;/span&gt;(self, root):
        path = os.path.join(root, &lt;span class=&quot;synConstant&quot;&gt;&#39;news.db&#39;&lt;/span&gt;)
        self.conn = sqlite3.connect(path)
        self.create_table()
        self.stmts = []
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__del__&lt;/span&gt;(self): self.conn.close()
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create_table&lt;/span&gt;(self):    
        cur = self.conn.cursor()
        cur.executescript(self.__create_table_sql())
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__create_table_sql&lt;/span&gt;(self):
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;create table if not exists news(&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  id         integer primary key,&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  published  text,&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  url        text,&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  title      text,&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  body       text  -- URL先から本文だけを抽出したプレーンテキスト&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;create index if not exists idx_news on &lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  news(published desc, id desc, url, title);&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;create table if not exists sources(&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  id       integer primary key,&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  domain   text, -- URLのドメイン名&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  name     text, -- 情報源名&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  created  text  -- 登録日時（同一ドメイン名が複数あるとき新しいほうを表示する）&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;create index if not exists idx_sources on &lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  sources(domain, created desc, id desc, name);&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__insert_sql&lt;/span&gt;(self): 
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;insert into news(published,url,title,body) values(?,?,?,?)&#39;&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;append_insert_stmt&lt;/span&gt;(self, published, url, title, body):
        self.stmts.append((published, url, title, body))
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;insert&lt;/span&gt;(self):
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; == &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(self.stmts): &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;try&lt;/span&gt;:
            cur = self.conn.cursor()
            cur.executemany(self.__insert_sql(), self.stmts)
            self.conn.commit()
            self.stmts.clear()
        &lt;span class=&quot;synStatement&quot;&gt;except&lt;/span&gt;: 
            &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; traceback
            traceback.print_exc()
            self.conn.rollback()
&lt;/pre&gt;


&lt;h3&gt;NewsImagesDb.py&lt;/h3&gt;

&lt;p&gt;　ニュース画像用DB。今回は使っていない。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; sqlite3
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; os

&lt;span class=&quot;synStatement&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;NewsImagesDb&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__init__&lt;/span&gt;(self, root):
        path = os.path.join(root, &lt;span class=&quot;synConstant&quot;&gt;&#39;news_images.db&#39;&lt;/span&gt;)
        self.conn = sqlite3.connect()
        self.create_table()
        self.stmts = []
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__del__&lt;/span&gt;(self): self.conn.close()
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;create_table&lt;/span&gt;(self):    
        cur = self.conn.cursor()
        cur.execute(self.__create_table_sql())
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__create_table_sql&lt;/span&gt;(self):
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;create table if not exists images(&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  news_id integer, -- どの記事に対応した画像か&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  url     text,    -- 拡張子も含めているはず。これ重要&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;  image   blob     -- バイナリ&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;);&#39;&#39;&#39;&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;append_insert_stmt&lt;/span&gt;(self, news_id, url, image):
        self.stmts.append(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;insert into images(news_id, url, image) values(&amp;quot;&lt;/span&gt;
            + &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&#39;&amp;quot;&lt;/span&gt; + news_id + &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&#39;,&amp;quot;&lt;/span&gt;
            + &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&#39;&amp;quot;&lt;/span&gt; + url       + &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&#39;,&amp;quot;&lt;/span&gt;
            + &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&#39;&amp;quot;&lt;/span&gt; + image      + &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&#39;&amp;quot;&lt;/span&gt;
            + &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;);&amp;quot;&lt;/span&gt;);
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;insert&lt;/span&gt;(self):
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; == &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(self.stmts): &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt;
        self.stmts.insert(&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;begin;&amp;quot;&lt;/span&gt;)
        self.stmts.append(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;end;&amp;quot;&lt;/span&gt;)
        cur = self.conn.cursor()
        cur.execute(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;.join(stmts))
        self.stmts.clear()
&lt;/pre&gt;


&lt;h3&gt;get_html.py&lt;/h3&gt;

&lt;p&gt;　URLからHTMLを取得する。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/UTF-8&quot;&gt;UTF-8&lt;/a&gt;に変換して。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; selenium &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; webdriver
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; selenium.webdriver.chrome.options &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; Options
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; BeautifulSoup
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; time

&lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;get_html&lt;/span&gt;(url, wait_second=&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;):
    options = Options()
    options.set_headless(&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;)
    driver = webdriver.Chrome(chrome_options=options)
    driver.get(url)
    time.sleep(wait_second)
    html = driver.page_source.encode(&lt;span class=&quot;synConstant&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;).decode(&lt;span class=&quot;synConstant&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;)
    &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; html
&lt;/pre&gt;


&lt;h3&gt;HtmlContentExtractor.py&lt;/h3&gt;

&lt;p&gt;　本文を抽出する。HTMLとプレーンテキスト形式で。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; sys
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; os
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; extractcontent3

&lt;span class=&quot;synStatement&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;HtmlContentExtractor&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__init__&lt;/span&gt;(self, option=&lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;):
        self.__html = &lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;
        self.__text = &lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;
        self.__extractor = extractcontent3.ExtractContent()
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; option &lt;span class=&quot;synStatement&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;None&lt;/span&gt;: self.__extractor.set_option(option) &lt;span class=&quot;synComment&quot;&gt;# option = {&amp;quot;threshold&amp;quot;:50}&lt;/span&gt;
    &lt;span class=&quot;synPreProc&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;property&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;Html&lt;/span&gt;(self): &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; self.__html
    &lt;span class=&quot;synPreProc&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;property&lt;/span&gt;
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;Text&lt;/span&gt;(self): &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; self.__text
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;extract&lt;/span&gt;(self, html):
        self.__extractor.analyse(html)
&lt;span class=&quot;synComment&quot;&gt;#        text, title = extractor.as_text()&lt;/span&gt;
        self.__html, title = self.__extractor.as_html()
&lt;span class=&quot;synComment&quot;&gt;#        title = extractor.extract_title(html)&lt;/span&gt;
        self.__text = self.__format_to_text(html)
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; self.__text
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__format_to_text&lt;/span&gt;(self, html):
        &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; re
        &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; unicodedata
        st = re.sub(&lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;&amp;lt;p&amp;gt;([^　])&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;　\1&amp;quot;&lt;/span&gt;, html) &lt;span class=&quot;synComment&quot;&gt;# 段落の先頭は全角スペース&lt;/span&gt;
        st = re.sub(&lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;&amp;lt;/p&amp;gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;, st) &lt;span class=&quot;synComment&quot;&gt;# 段落の末尾は2つ改行する&lt;/span&gt;
        st = re.sub(&lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;, st)
        st = re.sub(&lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;, st)
        st = re.sub(&lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;&amp;lt;.+?&amp;gt;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, st)
        &lt;span class=&quot;synComment&quot;&gt;# Convert from wide character to ascii&lt;/span&gt;
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; st &lt;span class=&quot;synStatement&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;type&lt;/span&gt;(st) != &lt;span class=&quot;synIdentifier&quot;&gt;str&lt;/span&gt;: st = unicodedata.normalize(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;NFKC&amp;quot;&lt;/span&gt;, st)
        st = re.sub(&lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;[\u2500-\u253f\u2540-\u257f]&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, st)  &lt;span class=&quot;synComment&quot;&gt;# 罫線(keisen)&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;#        st = re.sub(r&amp;quot;&amp;amp;(.*?);&amp;quot;, lambda x: self.CHARREF.get(x.group(1), x.group()), st)&lt;/span&gt;
        st = re.sub(&lt;span class=&quot;synConstant&quot;&gt;r&amp;quot;[ \t]+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;, st)
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; st.rstrip(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\n\t&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; &amp;quot;&lt;/span&gt;)
    &lt;span class=&quot;synStatement&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;__show_meta&lt;/span&gt;(self):
        &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;&#39;extractcontent3 メタ情報&#39;&lt;/span&gt;)
        &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(extractcontent3.__version__)
        &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(extractcontent3.__file__)
        &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;synIdentifier&quot;&gt;dir&lt;/span&gt;(extractcontent3))
&lt;/pre&gt;


&lt;h1&gt;つまづきポイント&lt;/h1&gt;

&lt;h2&gt;sqlite3&lt;/h2&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;cur.execute(&lt;span class=&quot;synConstant&quot;&gt;&#39;create table ...; ...;&#39;&lt;/span&gt;)
&lt;/pre&gt;




&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;    cur.execute&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;self.__create_table_sql&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;())&lt;/span&gt;
sqlite3.Warning: You can only execute one statement at a &lt;span class=&quot;synStatement&quot;&gt;time&lt;/span&gt;.
&lt;/pre&gt;


&lt;p&gt;　&lt;code&gt;execute&lt;/code&gt;メソッドは1度に1&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%C6%A1%BC%A5%C8%A5%E1%A5%F3%A5%C8&quot;&gt;ステートメント&lt;/a&gt;のみ実行可能。だが、それでは超低速になってしまう。&lt;/p&gt;

&lt;p&gt;　&lt;code&gt;executemany&lt;/code&gt;メソッドを使うべき。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;try&lt;/span&gt;:
    cur.executemany(&lt;span class=&quot;synConstant&quot;&gt;&#39;insert into T(A,B) values(?,?)&#39;&lt;/span&gt;, [(&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;A&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;B&#39;&lt;/span&gt;),(&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;&#39;C&#39;&lt;/span&gt;)])
    conn.commit()
&lt;span class=&quot;synStatement&quot;&gt;except&lt;/span&gt;:
    conn.rollback()
&lt;/pre&gt;


&lt;p&gt;　または、1度に複数の&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%B9%A5%C6%A1%BC%A5%C8%A5%E1%A5%F3%A5%C8&quot;&gt;ステートメント&lt;/a&gt;を実行させたいなら&lt;code&gt;executescript&lt;/code&gt;メソッドを使う。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;cur.executescript(&lt;span class=&quot;synConstant&quot;&gt;&#39;create table ...; ...;&#39;&lt;/span&gt;)
&lt;/pre&gt;


&lt;h1&gt;問題&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;による違い

&lt;ul&gt;
&lt;li&gt;日付フォーマット&lt;/li&gt;
&lt;li&gt;本文が取得できない

&lt;ul&gt;
&lt;li&gt;会員登録、ログイン、「続きを読む」などに阻まれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　この問題が致命的なため、DBに取り込むのは1件だけにしている。様子見。&lt;/p&gt;

&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-19T15:34:06+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;


&lt;h1&gt;前回まで&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/21/000000&quot;&gt;NewsApiを使ってみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/27/000000&quot;&gt;NewsApiでカテゴリ別にニュースを取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/28/000000&quot;&gt;NewsApiで得たニュースを重複なく取り込む方法を考える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/29/000000&quot;&gt;NewsApiで得たニュースを保存するSQLite3テーブルを考える&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/30/000000&quot;&gt;NewsApiのJSONからSQLite3DBファイルへ挿入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/01/000000&quot;&gt;SQLite3に登録済みのNewsApiデータから最新を取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/02/000000&quot;&gt;NewsApiのJSONからSQLite3DBファイルへ挿入する（未登録のみ）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/03/000000&quot;&gt;HTMLから本文テキストだけを抽出したい（python-extractcontent）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/05/000000&quot;&gt;HTMLから本文を抽出してフォーマットする（改行＋全角スペース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/06/000000&quot;&gt;NewsApiのURLから本文を抽出してSQLite3に挿入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/09/000000&quot;&gt;ニュースサイトを探す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/10/000000&quot;&gt;PythonでRSSを取得する（feedparser）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/10/11/000000&quot;&gt;PythonでのWebスクレイピング環境構築（chromium-driver,selenium,beautifulsoup4）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</hatena:formatted-content>

<category term="Webスクレイピング" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613436608134</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613436608134"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/11/000000"/>
<author><name>ytyaru</name></author>
<title>PythonでのWebスクレイピング環境構築（chromium-driver,selenium,beautifulsoup4）</title>
<updated>2021-10-11T00:00:00+09:00</updated>
<published>2021-10-11T00:00:33+09:00</published>
<app:edited>2021-10-11T00:00:33+09:00</app:edited>
<summary type="text">あっさりできた。</summary>
<content type="text/x-markdown">　あっさりできた。

&lt;!-- more --&gt;

# 成果物

* [github](https://github.com/ytyaru/Python.WebScraping.ChromiumDriver.Selenium.BeautifulSoup4.20190919150615)

# 情報源

* https://pasero.net/~mako/blog/s/2364
* https://www.crummy.com/software/BeautifulSoup/bs4/doc/
* https://kurozumi.github.io/selenium-python/api.html

# 必要なライブラリのインストール

　これでJavaScriptで生成されるサイトも表示できるらしい。

```sh
sudo apt install chromium-driver
pip3 install selenium
pip3 install beautifulsoup4
```

&lt;details&gt;&lt;summary&gt;詳細ログ&lt;/summary&gt;
```sh
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています                
状態情報を読み取っています... 完了
注意、&#39;chromium-driver&#39; の代わりに &#39;chromium-chromedriver&#39; を選択します
以下のパッケージが自動でインストールされましたが、もう必要とされていません:
  docutils-common docutils-doc gir1.2-vte-2.90 libnunit-cil-dev libnunit-console-runner2.6.3-cil libnunit-core-interfaces2.6.3-cil
  libnunit-core2.6.3-cil libnunit-framework2.6.3-cil libnunit-mocks2.6.3-cil libnunit-util2.6.3-cil libvte-2.90-9 libvte-2.90-common
  libvte-2.90-doc python-alabaster python-babel python-babel-localedata python-docutils python-imagesize python-pygments python-roman
  python-tz rlwrap sphinx-common vim-runtime
これを削除するには &#39;sudo apt autoremove&#39; を利用してください。
以下のパッケージが新たにインストールされます:
  chromium-chromedriver
アップグレード: 0 個、新規インストール: 1 個、削除: 0 個、保留: 0 個。
3,781 kB のアーカイブを取得する必要があります。
この操作後に追加で 12.1 MB のディスク容量が消費されます。
取得:1 http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian stretch/main armhf chromium-chromedriver armhf 72.0.3626.121-0+rpt4 [3,781 kB]
3,781 kB を 14秒 で取得しました (265 kB/s)                                                                                             
以前に未選択のパッケージ chromium-chromedriver を選択しています。
(データベースを読み込んでいます ... 現在 149496 個のファイルとディレクトリがインストールされています。)
.../chromium-chromedriver_72.0.3626.121-0+rpt4_armhf.deb を展開する準備をしています ...
chromium-chromedriver (72.0.3626.121-0+rpt4) を展開しています...
chromium-chromedriver (72.0.3626.121-0+rpt4) を設定しています ...
```
```sh
Collecting selenium
  Using cached https://files.pythonhosted.org/packages/80/d6/4294f0b4bce4de0abf13e17190289f9d0613b0a44e5dd6a7f5ca98459853/selenium-3.141.0-py2.py3-none-any.whl
Collecting urllib3 (from selenium)
  Using cached https://files.pythonhosted.org/packages/e6/60/247f23a7121ae632d62811ba7f273d0e58972d75e58a94d329d51550a47d/urllib3-1.25.3-py2.py3-none-any.whl
Installing collected packages: urllib3, selenium
Successfully installed selenium-3.141.0 urllib3-1.25.3
```
```sh
Collecting beautifulsoup4
  Using cached https://files.pythonhosted.org/packages/1a/b7/34eec2fe5a49718944e215fde81288eec1fa04638aa3fb57c1c6cd0f98c3/beautifulsoup4-4.8.0-py3-none-any.whl
Collecting soupsieve&gt;=1.2 (from beautifulsoup4)
  Using cached https://files.pythonhosted.org/packages/0b/44/0474f2207fdd601bb25787671c81076333d2c80e6f97e92790f8887cf682/soupsieve-1.9.3-py2.py3-none-any.whl
Installing collected packages: soupsieve, beautifulsoup4
Successfully installed beautifulsoup4-4.8.0 soupsieve-1.9.3
```
&lt;/details&gt;

# コード

　指定したURLを指定したパスに保存する。

download_html.py
```python
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from bs4 import BeautifulSoup
import extractcontent3
import sys
import os

if len(sys.argv) &lt; 2:
    raise Error(&#39;第1引数にURLパスを指定してください。&#39;)
    exit()
url = sys.argv[1]
path_html = sys.argv[2] if 2 &lt; len(sys.argv) else &#39;/tmp/work/index.html&#39;

options = Options()
options.set_headless(True)
driver = webdriver.Chrome(chrome_options=options)
driver.get(url)
html = driver.page_source.encode(&#39;utf-8&#39;)
print(html)
soup = BeautifulSoup(html, &quot;html.parser&quot;)

os.makedirs(os.path.dirname(path_html), exist_ok=True)
with open(path_html, mode=&#39;w&#39;) as f:
    f.write(str(html))
```

　実行コマンドは以下。

```sh
python3 a.py URL 出力先HTMLパス
```

　できた。

## ちょっとハマった 

　出力時に`str(html)`として文字列化してやらないと以下エラーがでる。

```sh
Traceback (most recent call last):
  File &quot;a.py&quot;, line 29, in &lt;module&gt;
    f.write(html)
TypeError: write() argument must be str, not bytes
```

　つまり、`driver.page_source.encode(&#39;utf-8&#39;)`で取得された結果はバイナリデータということ。

# 対象環境

* &lt;time datetime=&quot;2019-09-19T14:11:59+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```
</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　あっさりできた。&lt;/p&gt;

&lt;h1&gt;成果物&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ytyaru/Python.WebScraping.ChromiumDriver.Selenium.BeautifulSoup4.20190919150615&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;情報源&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pasero.net/~mako/blog/s/2364&quot;&gt;https://pasero.net/~mako/blog/s/2364&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/bs4/doc/&quot;&gt;https://www.crummy.com/software/BeautifulSoup/bs4/doc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kurozumi.github.io/selenium-python/api.html&quot;&gt;https://kurozumi.github.io/selenium-python/api.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;必要なライブラリのインストール&lt;/h1&gt;

&lt;p&gt;　これで&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;で生成されるサイトも表示できるらしい。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;sudo apt install chromium-driver
pip3 install selenium
pip3 install beautifulsoup4
&lt;/pre&gt;


&lt;p&gt;&lt;details&gt;&lt;summary&gt;詳細ログ&lt;/summary&gt;&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています                
状態情報を読み取っています... 完了
注意、&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;chromium-driver&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt; の代わりに &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;chromium-chromedriver&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt; を選択します
以下のパッケージが自動でインストールされましたが、もう必要とされていません:
  docutils-common docutils-doc gir1.2-vte-2.&lt;span class=&quot;synConstant&quot;&gt;90&lt;/span&gt; libnunit-cil-dev libnunit-console-runner2.&lt;span class=&quot;synConstant&quot;&gt;6&lt;/span&gt;.3-cil libnunit-core-interfaces2.&lt;span class=&quot;synConstant&quot;&gt;6&lt;/span&gt;.3-cil
  libnunit-core2.&lt;span class=&quot;synConstant&quot;&gt;6&lt;/span&gt;.3-cil libnunit-framework2.&lt;span class=&quot;synConstant&quot;&gt;6&lt;/span&gt;.3-cil libnunit-mocks2.&lt;span class=&quot;synConstant&quot;&gt;6&lt;/span&gt;.3-cil libnunit-util2.&lt;span class=&quot;synConstant&quot;&gt;6&lt;/span&gt;.3-cil libvte-2.90-9 libvte-2.90-common
  libvte-2.90-doc python-alabaster python-babel python-babel-localedata python-docutils python-imagesize python-pygments python-roman
  python-tz rlwrap sphinx-common vim-runtime
これを削除するには &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sudo apt autoremove&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt; を利用してください。
以下のパッケージが新たにインストールされます:
  chromium-chromedriver
アップグレード: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; 個、新規インストール: &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; 個、削除: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; 個、保留: &lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; 個。
&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;781&lt;/span&gt; kB のアーカイブを取得する必要があります。
この操作後に追加で &lt;span class=&quot;synConstant&quot;&gt;12&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; MB のディスク容量が消費されます。
取得:1 http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian stretch/main armhf chromium-chromedriver armhf &lt;span class=&quot;synConstant&quot;&gt;72&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;3626&lt;/span&gt;.121-0+rpt4 &lt;span class=&quot;synStatement&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;781&lt;/span&gt; kB&lt;span class=&quot;synStatement&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;synConstant&quot;&gt;781&lt;/span&gt; kB を &lt;span class=&quot;synConstant&quot;&gt;14&lt;/span&gt;秒 で取得しました &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;265&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt; kB/s&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;                                                                                             
以前に未選択のパッケージ chromium-chromedriver を選択しています。
&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;データベースを読み込んでいます ... 現在 &lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;149496&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt; 個のファイルとディレクトリがインストールされています。&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
.../chromium-chromedriver_72.&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;3626&lt;/span&gt;.121-0+rpt4_armhf.deb を展開する準備をしています ...
chromium-chromedriver &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;72&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;3626&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.121-0+rpt4&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt; を展開しています...
chromium-chromedriver &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;72&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;3626&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;.121-0+rpt4&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt; を設定しています ...
&lt;/pre&gt;




&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;Collecting selenium
  Using cached https://files.pythonhosted.org/packages/&lt;span class=&quot;synConstant&quot;&gt;80&lt;/span&gt;/d6/4294f0b4bce4de0abf13e17190289f9d0613b0a44e5dd6a7f5ca98459853/selenium-3.&lt;span class=&quot;synConstant&quot;&gt;141&lt;/span&gt;.0-py2.py3-none-any.whl
Collecting urllib3 &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;from selenium&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
  Using cached https://files.pythonhosted.org/packages/e6/&lt;span class=&quot;synConstant&quot;&gt;60&lt;/span&gt;/247f23a7121ae632d62811ba7f273d0e58972d75e58a94d329d51550a47d/urllib3-1.&lt;span class=&quot;synConstant&quot;&gt;25&lt;/span&gt;.3-py2.py3-none-any.whl
Installing collected packages: urllib3, selenium
Successfully installed selenium-3.&lt;span class=&quot;synConstant&quot;&gt;141&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; urllib3-1.&lt;span class=&quot;synConstant&quot;&gt;25&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;
&lt;/pre&gt;




&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;Collecting beautifulsoup4
  Using cached https://files.pythonhosted.org/packages/1a/b7/34eec2fe5a49718944e215fde81288eec1fa04638aa3fb57c1c6cd0f98c3/beautifulsoup4-4.&lt;span class=&quot;synConstant&quot;&gt;8&lt;/span&gt;.0-py3-none-any.whl
Collecting soupsieve&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;from beautifulsoup4&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
  Using cached https://files.pythonhosted.org/packages/0b/&lt;span class=&quot;synConstant&quot;&gt;44&lt;/span&gt;/0474f2207fdd601bb25787671c81076333d2c80e6f97e92790f8887cf682/soupsieve-1.&lt;span class=&quot;synConstant&quot;&gt;9&lt;/span&gt;.3-py2.py3-none-any.whl
Installing collected packages: soupsieve, beautifulsoup4
Successfully installed beautifulsoup4-4.&lt;span class=&quot;synConstant&quot;&gt;8&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt; soupsieve-1.&lt;span class=&quot;synConstant&quot;&gt;9&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;3&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h1&gt;コード&lt;/h1&gt;

&lt;p&gt;　指定したURLを指定したパスに保存する。&lt;/p&gt;

&lt;p&gt;download_html.py&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; selenium &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; webdriver
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; selenium.webdriver.chrome.options &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; Options
&lt;span class=&quot;synPreProc&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; BeautifulSoup
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; extractcontent3
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; sys
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; os

&lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(sys.argv) &amp;lt; &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;raise&lt;/span&gt; Error(&lt;span class=&quot;synConstant&quot;&gt;&#39;第1引数にURLパスを指定してください。&#39;&lt;/span&gt;)
    exit()
url = sys.argv[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]
path_html = sys.argv[&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;] &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt; &amp;lt; &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(sys.argv) &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;/tmp/work/index.html&#39;&lt;/span&gt;

options = Options()
options.set_headless(&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;)
driver = webdriver.Chrome(chrome_options=options)
driver.get(url)
html = driver.page_source.encode(&lt;span class=&quot;synConstant&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;)
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(html)
soup = BeautifulSoup(html, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;html.parser&amp;quot;&lt;/span&gt;)

os.makedirs(os.path.dirname(path_html), exist_ok=&lt;span class=&quot;synIdentifier&quot;&gt;True&lt;/span&gt;)
&lt;span class=&quot;synStatement&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;open&lt;/span&gt;(path_html, mode=&lt;span class=&quot;synConstant&quot;&gt;&#39;w&#39;&lt;/span&gt;) &lt;span class=&quot;synStatement&quot;&gt;as&lt;/span&gt; f:
    f.write(&lt;span class=&quot;synIdentifier&quot;&gt;str&lt;/span&gt;(html))
&lt;/pre&gt;


&lt;p&gt;　実行コマンドは以下。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;python3 a.py URL 出力先HTMLパス
&lt;/pre&gt;


&lt;p&gt;　できた。&lt;/p&gt;

&lt;h2&gt;ちょっとハマった&lt;/h2&gt;

&lt;p&gt;　出力時に&lt;code&gt;str(html)&lt;/code&gt;として文字列化してやらないと以下エラーがでる。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;Traceback &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;most recent call last&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;a.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;
    f.write&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
TypeError: write&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt; argument must be str, not bytes
&lt;/pre&gt;


&lt;p&gt;　つまり、&lt;code&gt;driver.page_source.encode(&#39;utf-8&#39;)&lt;/code&gt;で取得された結果はバイナリデータということ。&lt;/p&gt;

&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-19T14:11:59+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;

</hatena:formatted-content>

<category term="Webスクレイピング" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-13574176438021008877</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/13574176438021008877"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/14/093933"/>
<author><name>ytyaru</name></author>
<title>はてなフォトライフの全画像を自動取得したいができなかった（reCAPTCHA）</title>
<updated>2023-07-07T00:00:00+09:00</updated>
<published>2021-10-10T14:54:20+09:00</published>
<app:edited>2021-10-14T09:39:33+09:00</app:edited>
<summary type="text">原因はreCAPTUCHA。こいつのせいでログインできず公開範囲が「自分のみ」のフォルダにある画像一覧をRSSから取得できない。</summary>
<content type="text/x-markdown">　原因はreCAPTUCHA。こいつのせいでログインできず公開範囲が「自分のみ」のフォルダにある画像一覧をRSSから取得できない。

&lt;!-- more --&gt;

# はじめに

　かつて私は表題の件を解決していた。

* [はてなフォトライフの全データURLをRSSで取得する方法を調べてみた](https://ytyaru.hatenablog.com/entry/2017/07/06/000000)
* [github](https://github.com/ytyaru/Hatena.PhotLife.Downloader.201703041456)

　しかし時と共に、はてなサイトの仕様が変更された。当時のコードではもはやログイン処理が失敗してしまう。その原因について調査したところ、reCAPTUCHAの仕業だと思われることが判明した。

# 調査

## ログインページ

　まずははてなサイトのログインページをリクエストする。

* [https://www.hatena.ne.jp/login](https://www.hatena.ne.jp/login)

### HTMLコード

　HTMLコードを見る。このうちログイン処理をするフォーム部分のみ抜粋する。

```html
      &lt;form name=&quot;login&quot; action=&quot;/login&quot; method=&quot;post&quot;&gt;
        &lt;div&gt;
&lt;div class=&quot;error-message&quot;&gt;
  &lt;p&gt;時間を空けて再度お試しください。または&lt;a href=&quot;https://hatena.zendesk.com/hc/ja&quot;&gt;サポート窓口&lt;/a&gt;にお問い合わせください。&lt;/p&gt;
&lt;/div&gt;
          &lt;div class=&quot;input-item&quot;&gt;
            &lt;div class=&quot;input-item-inner&quot;&gt;
              &lt;input placeholder=&quot;はてなID または メールアドレス&quot; value=&quot;*******************&quot; pattern=&quot;.{3,}&quot; id=&quot;login-name&quot; type=&quot;text&quot; class=&quot;text&quot; required=&quot;required&quot; autofocus=&quot;autofocus&quot; name=&quot;name&quot;&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class=&quot;input-item&quot;&gt;
            &lt;div class=&quot;input-item-inner&quot;&gt;
              &lt;input class=&quot;password&quot; type=&quot;password&quot; name=&quot;password&quot; required=&quot;required&quot; placeholder=&quot;パスワード&quot; value=&quot;*************&quot;&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id=&quot;option&quot; class=&quot;config-button&quot;&gt;              &lt;div class=&quot;auto-login&quot;&gt;
                &lt;a href=&quot;#&quot; class=&quot;checkbox-tab&quot;&gt;&lt;label for=&quot;auto_login&quot;&gt;&lt;/label&gt;&lt;/a&gt;
                &lt;div class=&quot;checkbox-item&quot;&gt;
                  &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; checked=&quot;checked&quot; name=&quot;persistent&quot; value=&quot;1&quot; id=&quot;auto_login&quot; /&gt;
                  &lt;label for=&quot;auto_login&quot; class=&quot;checkbox-text&quot;&gt;
                    &lt;span&gt;次回から自動的にログイン&lt;/span&gt;
                  &lt;/label&gt;
                &lt;/div&gt;
              &lt;/div&gt;                        &lt;input value=&quot;&quot; name=&quot;recaptcha_token&quot; type=&quot;hidden&quot; /&gt;
            &lt;button type=&quot;button&quot; id=&quot;login-button&quot; class=&quot;submit-button&quot;&gt;送信する&lt;/button&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/form&gt;
```

#### フォーム解析

* HTTP通信方法：`POST`
* データ（`&lt;input name&gt;`）
    * `name`: はてなID または メールアドレス
    * `password`: パスワード
    * `persistent`: 次回から自動的にログインするか否か
    * `recaptcha_token`: 「私はボットではありません」チェックの進化版。ユーザが操作せずとも自動的にBOTチェックする。そのためにJavaScriptで実行することが必要である。

　これらのデータを送信せねばならない。そのうち`recaptcha_token`というのが問題。

　なにこれ？　どうしたらいいの？　とりあえず調査してみる。

# reCAPTCHA

* [recaptcha](https://hatoblog.net/recaptcha/)

　reCAPTUCHAとはBOTを防ぐための技術。自動ツールによる投稿を防ぐのが目的。

　たぶんこいつのせい。

　reCAPTUCHAのせいでログインするときJavaScriptの実行が必要になってしまった。今までのようにCookieの実装だけではダメ。

## はてなフォトライフAPI

　ふつうならやりたい処理にマッチしたWebAPIを使いたいところ。だが今回の[はてなフォトライフAPI][はてなフォトライフAPI Feed]では、公開範囲が「自分のみ」のフォルダを取得する術がない。トップフォルダの取得しかできない。APIがしょぼい。

　なので仕方なくサイトからログインしてRSSを取得することでゲットしようと考えたわけだ。HTTP通信するプログラムを書いたが、ログインでreCAPTUCHAに阻まれてしまった。reCAPTUCHAの処理を動作させるためにJavaScript実行させるような処理が必要だ。

[はてなフォトライフAPI Feed]:http://developer.hatena.ne.jp/ja/documents/fotolife/apis/atom#p6

## 突破する方法

### [2Captcha][]

[2Captcha]:https://qiita.com/derodero24/items/7d36f4617a40fbb36b11

　2Captchaという有料ツールによってrecaptchaを突破できるらしい。有料なのは嫌だし、ロシアというのも嫌だ。北方領土から出ていけ侵略者め。

### Selenium

* [SeleniumでFirefoxブラウザのプロファイルを読み込む【Recaptcha突破、Cookie+アドオン読み込み】](https://noauto-nolife.com/post/selenium-read-profile)

&gt; 予めブラウザでログインをしておいて、そのプロファイルを読み込めば良い。

　これなら半自動化はできそうだ。おそらくreCAPTUCHA対策はこれくらいしかないのだろう。

```python
fp      = webdriver.FirefoxProfile(&quot;/home/[ユーザー名]/.mozilla/firefox/[プロファイル名].default&quot;)
browser = webdriver.Firefox(fp)
```

* [Python + Selenium + Chrome で自動ログインいくつか](https://qiita.com/memakura/items/dbe7f6edadd456da1c5d)

&gt; 既存プロフィールで運用する場合には悪意ある運用を避けるためのセーブ機構の為に、すでにSelenium以外から立ち上げられた同プロフィールのブラウザがある場合にエラーが吐かれるのでご注意を。

* [はてなブログのアクセス数を自動で取得、表示するプログラムを作ってみる](https://nochitamama.hatenablog.com/entry/Python/autoaccess)
* [No such file or directory: &#39;chromedriver&#39;: &#39;chromedriver&#39;の解決](https://qiita.com/jajaja/items/d7f80876519aa8c3e64c)


### 環境構築できず

　ラズパイ4で環境構築に失敗した。`selenium`を`chrome`で使うために`chromedriver-binary`を入れたい。だが、arm32用バイナリがないと怒られた。

```sh
pip3 install selenium
pip3 install chromedriver-binary
```
&lt;details&gt;&lt;summary&gt;エラーログ&lt;/summary&gt;
```sh
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Collecting chromedriver-binary
  Downloading https://files.pythonhosted.org/packages/8b/c5/77a9822034f3e7c244dab99f92a7a4923ac4372623eca9bf683801c17003/chromedriver-binary-95.0.4638.17.0.tar.gz
Building wheels for collected packages: chromedriver-binary
  Running setup.py bdist_wheel for chromedriver-binary ... error
  Complete output from command /usr/bin/python3 -u -c &quot;import setuptools, tokenize;__file__=&#39;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&#39;;f=getattr(tokenize, &#39;open&#39;, open)(__file__);code=f.read().replace(&#39;\r\n&#39;, &#39;\n&#39;);f.close();exec(compile(code, __file__, &#39;exec&#39;))&quot; bdist_wheel -d /tmp/pip-wheel-yhdfg6ec --python-tag cp37:
  running bdist_wheel
  running build
  running build_py
  
  Downloading Chromedriver...
  
  Traceback (most recent call last):
    File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;
    File &quot;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&quot;, line 84, in &lt;module&gt;
      cmdclass={&#39;build_py&#39;: DownloadChromedriver}
    File &quot;/usr/lib/python3/dist-packages/setuptools/__init__.py&quot;, line 145, in setup
      return distutils.core.setup(**attrs)
    File &quot;/usr/lib/python3.7/distutils/core.py&quot;, line 148, in setup
      dist.run_commands()
    File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 966, in run_commands
      self.run_command(cmd)
    File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
      cmd_obj.run()
    File &quot;/usr/lib/python3/dist-packages/wheel/bdist_wheel.py&quot;, line 188, in run
      self.run_command(&#39;build&#39;)
    File &quot;/usr/lib/python3.7/distutils/cmd.py&quot;, line 313, in run_command
      self.distribution.run_command(command)
    File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
      cmd_obj.run()
    File &quot;/usr/lib/python3.7/distutils/command/build.py&quot;, line 135, in run
      self.run_command(cmd_name)
    File &quot;/usr/lib/python3.7/distutils/cmd.py&quot;, line 313, in run_command
      self.distribution.run_command(command)
    File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
      cmd_obj.run()
    File &quot;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&quot;, line 42, in run
      url = get_chromedriver_url(version=chromedriver_version)
    File &quot;/tmp/pip-install-dgv6d01o/chromedriver-binary/chromedriver_binary/utils.py&quot;, line 57, in get_chromedriver_url
      raise RuntimeError(&#39;Could not determine chromedriver download URL for this platform.&#39;)
  RuntimeError: Could not determine chromedriver download URL for this platform.
  
  ----------------------------------------
  Failed building wheel for chromedriver-binary
  Running setup.py clean for chromedriver-binary
Failed to build chromedriver-binary
Installing collected packages: chromedriver-binary
  Running setup.py install for chromedriver-binary ... error
    Complete output from command /usr/bin/python3 -u -c &quot;import setuptools, tokenize;__file__=&#39;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&#39;;f=getattr(tokenize, &#39;open&#39;, open)(__file__);code=f.read().replace(&#39;\r\n&#39;, &#39;\n&#39;);f.close();exec(compile(code, __file__, &#39;exec&#39;))&quot; install --record /tmp/pip-record-0w4awj1b/install-record.txt --single-version-externally-managed --compile --user --prefix=:
    running install
    running build
    running build_py
    
    Downloading Chromedriver...
    
    Traceback (most recent call last):
      File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;
      File &quot;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&quot;, line 84, in &lt;module&gt;
        cmdclass={&#39;build_py&#39;: DownloadChromedriver}
      File &quot;/usr/lib/python3/dist-packages/setuptools/__init__.py&quot;, line 145, in setup
        return distutils.core.setup(**attrs)
      File &quot;/usr/lib/python3.7/distutils/core.py&quot;, line 148, in setup
        dist.run_commands()
      File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 966, in run_commands
        self.run_command(cmd)
      File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
        cmd_obj.run()
      File &quot;/usr/lib/python3/dist-packages/setuptools/command/install.py&quot;, line 61, in run
        return orig.install.run(self)
      File &quot;/usr/lib/python3.7/distutils/command/install.py&quot;, line 589, in run
        self.run_command(&#39;build&#39;)
      File &quot;/usr/lib/python3.7/distutils/cmd.py&quot;, line 313, in run_command
        self.distribution.run_command(command)
      File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
        cmd_obj.run()
      File &quot;/usr/lib/python3.7/distutils/command/build.py&quot;, line 135, in run
        self.run_command(cmd_name)
      File &quot;/usr/lib/python3.7/distutils/cmd.py&quot;, line 313, in run_command
        self.distribution.run_command(command)
      File &quot;/usr/lib/python3.7/distutils/dist.py&quot;, line 985, in run_command
        cmd_obj.run()
      File &quot;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&quot;, line 42, in run
        url = get_chromedriver_url(version=chromedriver_version)
      File &quot;/tmp/pip-install-dgv6d01o/chromedriver-binary/chromedriver_binary/utils.py&quot;, line 57, in get_chromedriver_url
        raise RuntimeError(&#39;Could not determine chromedriver download URL for this platform.&#39;)
    RuntimeError: Could not determine chromedriver download URL for this platform.
    
    ----------------------------------------
Command &quot;/usr/bin/python3 -u -c &quot;import setuptools, tokenize;__file__=&#39;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&#39;;f=getattr(tokenize, &#39;open&#39;, open)(__file__);code=f.read().replace(&#39;\r\n&#39;, &#39;\n&#39;);f.close();exec(compile(code, __file__, &#39;exec&#39;))&quot; install --record /tmp/pip-record-0w4awj1b/install-record.txt --single-version-externally-managed --compile --user --prefix=&quot; failed with error code 1 in /tmp/pip-install-dgv6d01o/chromedriver-binary/
```
&lt;/details&gt;

　エラーログのうち以下がポイントと思われる。

```sh
  RuntimeError: Could not determine chromedriver download URL for this platform.
  
  ----------------------------------------
  Failed building wheel for chromedriver-binary
```

　私の環境はRaspberry PI 4B。たぶんARMv7用バイナリがないのだろう。

* [Ubuntu 20.10 on Raspberry Pi 4B にSeleniumの環境を構築してスクレイピング　その１：環境構築とお試し](https://shuzo-kino.hateblo.jp/entry/2021/02/15/235827)
* [ARMでChromeDriverをコンパイルする](https://stackoverflow.com/questions/38732822/compile-chromedriver-on-arm)

　うーん、バージョンは次々とあがっていくし、きっとその都度バイナリやインストール方法も変わるし時間もかかるだろう。きっとセキュリティ関係で最新バージョンにしないと動作しないとか、そういったことになりそうな予感。

　面倒くさすぎる。これならブラウザのUI操作を自動化するテスト用ツールを使ったほうがいいかもしれない。でも今度はそれを調査する必要があるわけで。ああ面倒だ。

　一旦ここで諦めよう。

# 妥協案

　はてなフォトライフのフォルダの公開範囲を「トップと同じ」にすれば誰でもアクセスできるようになる。ログイン処理が不要になる。それで自動化できるようになる。本当は公開範囲を「自分のみ」のままにしておきたかったが、仕方ない。すべてはAPIの貧弱さが悪い。

&lt;a id=&quot;impressions&quot;&gt;&lt;/a&gt;
# [所感](#impressions)

　セキュリティは大事だが、自動化できないとかPC使う意味ない。reCAPTCHAで妨害するなら、せめてAPIを整えて欲しかった。まっとうなユーザが自分の情報をAPIで取得できない。あまりに残念すぎる現状。はてなさん、なんとかして。

&lt;a id=&quot;target-environment&quot;&gt;&lt;/a&gt;
# [対象環境](#target-environment)

* &lt;time datetime=&quot;2021-10-10T12:25:12+0900&quot; title=&quot;実施日&quot;&gt;2021-10-10&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 4 Model B
* [Raspberry Pi OS](https://ja.wikipedia.org/wiki/Raspbian) buster 10.0 2020-08-20 [※](http://ytyaru.hatenablog.com/entry/2020/10/06/111111)
* [bash](https://ja.wikipedia.org/wiki/Bash) 5.0.3(1)-release

```sh
$ uname -a
Linux raspberrypi 5.10.52-v7l+ #1441 SMP Tue Aug 3 18:11:56 BST 2021 armv7l GNU/Linux
```
</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　原因はreCAPTUCHA。こいつのせいでログインできず公開範囲が「自分のみ」のフォルダにある画像一覧を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;から取得できない。&lt;/p&gt;

&lt;h1&gt;はじめに&lt;/h1&gt;

&lt;p&gt;　かつて私は表題の件を解決していた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ytyaru.hatenablog.com/entry/2017/07/06/000000&quot;&gt;はてなフォトライフの全データURLをRSSで取得する方法を調べてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ytyaru/Hatena.PhotLife.Downloader.201703041456&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　しかし時と共に、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA&quot;&gt;はてな&lt;/a&gt;サイトの仕様が変更された。当時のコードではもはやログイン処理が失敗してしまう。その原因について調査したところ、reCAPTUCHAの仕業だと思われることが判明した。&lt;/p&gt;

&lt;h1&gt;調査&lt;/h1&gt;

&lt;h2&gt;ログインページ&lt;/h2&gt;

&lt;p&gt;　まずは&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA&quot;&gt;はてな&lt;/a&gt;サイトのログインページをリク&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A8%A5%B9&quot;&gt;エス&lt;/a&gt;トする。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hatena.ne.jp/login&quot;&gt;https://www.hatena.ne.jp/login&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;HTMLコード&lt;/h3&gt;

&lt;p&gt;　HTMLコードを見る。このうちログイン処理をするフォーム部分のみ抜粋する。&lt;/p&gt;

&lt;pre class=&quot;code lang-html&quot; data-lang=&quot;html&quot; data-unlink&gt;      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;login&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;/login&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;error-message&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;時間を空けて再度お試しください。または&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;https://hatena.zendesk.com/hc/ja&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;synUnderlined&quot;&gt;サポート窓口&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;にお問い合わせください。&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-item-inner&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; placeholder=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;はてなID または メールアドレス&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;*******************&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; pattern=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;.{3,}&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;login-name&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; required=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;required&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; autofocus=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;autofocus&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;input-item-inner&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; required=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;required&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; placeholder=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;パスワード&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;*************&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;option&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;config-button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;              &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;auto-login&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox-tab&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;auto_login&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checked&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;persistent&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;auto_login&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;auto_login&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;checkbox-text&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;次回から自動的にログイン&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;                        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;recaptcha_token&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; /&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;login-button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;submit-button&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;送信する&lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;


&lt;h4&gt;フォーム解析&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;HTTP通信方法：&lt;code&gt;POST&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;データ（&lt;code&gt;&amp;lt;input name&amp;gt;&lt;/code&gt;）

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: &lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CAID&quot;&gt;はてなID&lt;/a&gt; または メールアドレス&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password&lt;/code&gt;: パスワード&lt;/li&gt;
&lt;li&gt;&lt;code&gt;persistent&lt;/code&gt;: 次回から自動的にログインするか否か&lt;/li&gt;
&lt;li&gt;&lt;code&gt;recaptcha_token&lt;/code&gt;: 「私はボットではありません」チェックの進化版。ユーザが操作せずとも自動的に&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/BOT&quot;&gt;BOT&lt;/a&gt;チェックする。そのために&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;で実行することが必要である。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　これらのデータを送信せねばならない。そのうち&lt;code&gt;recaptcha_token&lt;/code&gt;というのが問題。&lt;/p&gt;

&lt;p&gt;　なにこれ？　どうしたらいいの？　とりあえず調査してみる。&lt;/p&gt;

&lt;h1&gt;reCAPTCHA&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hatoblog.net/recaptcha/&quot;&gt;recaptcha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　reCAPTUCHAとは&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/BOT&quot;&gt;BOT&lt;/a&gt;を防ぐための技術。自動ツールによる投稿を防ぐのが目的。&lt;/p&gt;

&lt;p&gt;　たぶんこいつのせい。&lt;/p&gt;

&lt;p&gt;　reCAPTUCHAのせいでログインするとき&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;の実行が必要になってしまった。今までのように&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Cookie&quot;&gt;Cookie&lt;/a&gt;の実装だけではダメ。&lt;/p&gt;

&lt;h2&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA%A5%D5%A5%A9%A5%C8%A5%E9%A5%A4%A5%D5&quot;&gt;はてなフォトライフ&lt;/a&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/API&quot;&gt;API&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;　ふつうならやりたい処理にマッチしたWebAPIを使いたいところ。だが今回の&lt;a href=&quot;http://developer.hatena.ne.jp/ja/documents/fotolife/apis/atom#p6&quot;&gt;はてなフォトライフAPI&lt;/a&gt;では、公開範囲が「自分のみ」のフォルダを取得する術がない。トップフォルダの取得しかできない。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/API&quot;&gt;API&lt;/a&gt;がしょぼい。&lt;/p&gt;

&lt;p&gt;　なので仕方なくサイトからログインして&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;を取得することでゲットしようと考えたわけだ。HTTP通信するプログラムを書いたが、ログインでreCAPTUCHAに阻まれてしまった。reCAPTUCHAの処理を動作させるために&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;実行させるような処理が必要だ。&lt;/p&gt;

&lt;h2&gt;突破する方法&lt;/h2&gt;

&lt;h3&gt;&lt;a href=&quot;https://qiita.com/derodero24/items/7d36f4617a40fbb36b11&quot;&gt;2Captcha&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;　2Captchaという有料ツールによってrecaptchaを突破できるらしい。有料なのは嫌だし、ロシアというのも嫌だ。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CB%CC%CA%FD%CE%CE%C5%DA&quot;&gt;北方領土&lt;/a&gt;から出ていけ侵略者め。&lt;/p&gt;

&lt;h3&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Selenium&quot;&gt;Selenium&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://noauto-nolife.com/post/selenium-read-profile&quot;&gt;SeleniumでFirefoxブラウザのプロファイルを読み込む【Recaptcha突破、Cookie+アドオン読み込み】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;予めブラウザでログインをしておいて、そのプロファイルを読み込めば良い。&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;　これなら半自動化はできそうだ。おそらくreCAPTUCHA対策はこれくらいしかないのだろう。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;fp      = webdriver.FirefoxProfile(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;/home/[ユーザー名]/.mozilla/firefox/[プロファイル名].default&amp;quot;&lt;/span&gt;)
browser = webdriver.Firefox(fp)
&lt;/pre&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/memakura/items/dbe7f6edadd456da1c5d&quot;&gt;Python + Selenium + Chrome で自動ログインいくつか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;既存プロフィールで運用する場合には悪意ある運用を避けるためのセーブ機構の為に、すでに&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Selenium&quot;&gt;Selenium&lt;/a&gt;以外から立ち上げられた同プロフィールのブラウザがある場合にエラーが吐かれるのでご注意を。&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nochitamama.hatenablog.com/entry/Python/autoaccess&quot;&gt;はてなブログのアクセス数を自動で取得、表示するプログラムを作ってみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/jajaja/items/d7f80876519aa8c3e64c&quot;&gt;No such file or directory: &#39;chromedriver&#39;: &#39;chromedriver&#39;の解決&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;環境構築できず&lt;/h3&gt;

&lt;p&gt;　ラズパイ4で環境構築に失敗した。&lt;code&gt;selenium&lt;/code&gt;を&lt;code&gt;chrome&lt;/code&gt;で使うために&lt;code&gt;chromedriver-binary&lt;/code&gt;を入れたい。だが、arm32用バイナリがないと怒られた。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;pip3 install selenium
pip3 install chromedriver-binary
&lt;/pre&gt;


&lt;p&gt;&lt;details&gt;&lt;summary&gt;エラーログ&lt;/summary&gt;&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;Looking &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Collecting chromedriver-binary
  Downloading https://files.pythonhosted.org/packages/8b/c5/77a9822034f3e7c244dab99f92a7a4923ac4372623eca9bf683801c17003/chromedriver-binary-95.&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;4638&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;17&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;.tar.gz
Building wheels &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; collected packages: chromedriver-binary
  Running setup.py bdist_wheel &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; chromedriver-binary ... error
  Complete output from &lt;span class=&quot;synStatement&quot;&gt;command&lt;/span&gt; /usr/bin/python3 &lt;span class=&quot;synStatement&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;import setuptools, tokenize;__file__=&#39;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&#39;;f=getattr(tokenize, &#39;open&#39;, open)(__file__);code=f.read().replace(&#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;, &#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;);f.close();exec(compile(code, __file__, &#39;exec&#39;))&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt; bdist_wheel &lt;span class=&quot;synStatement&quot;&gt;-d&lt;/span&gt; /tmp/pip-wheel-yhdfg6ec &lt;span class=&quot;synSpecial&quot;&gt;--python-tag&lt;/span&gt; cp37:
  running bdist_wheel
  running build
  running build_py
  
  Downloading Chromedriver...
  
  Traceback &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;:
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;84&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;synIdentifier&quot;&gt;cmdclass&lt;/span&gt;=&lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;build_py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;: DownloadChromedriver&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3/dist-packages/setuptools/__init__.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;145&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; setup
      &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; distutils.core.setup&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;**attrs&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/core.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;148&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; setup
      dist.run_commands&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;966&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_commands
      self.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;985&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
      cmd_obj.run&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3/dist-packages/wheel/bdist_wheel.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;188&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run
      self.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/cmd.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;313&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
      self.distribution.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;985&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
      cmd_obj.run&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/command/build.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;135&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run
      self.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;cmd_name&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/cmd.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;313&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
      self.distribution.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;985&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
      cmd_obj.run&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run
      url &lt;span class=&quot;synStatement&quot;&gt;=&lt;/span&gt; get_chromedriver_url&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;version&lt;/span&gt;=&lt;span class=&quot;synSpecial&quot;&gt;chromedriver_version&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/tmp/pip-install-dgv6d01o/chromedriver-binary/chromedriver_binary/utils.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; get_chromedriver_url
      raise RuntimeError&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Could not determine chromedriver download URL for this platform.&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
  RuntimeError: Could not determine chromedriver download URL &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; this platform.
  
  &lt;span class=&quot;synSpecial&quot;&gt;----------------------------------------&lt;/span&gt;
  Failed building wheel &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; chromedriver-binary
  Running setup.py clean &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; chromedriver-binary
Failed to build chromedriver-binary
Installing collected packages: chromedriver-binary
  Running setup.py install &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; chromedriver-binary ... error
    Complete output from &lt;span class=&quot;synStatement&quot;&gt;command&lt;/span&gt; /usr/bin/python3 &lt;span class=&quot;synStatement&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;import setuptools, tokenize;__file__=&#39;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&#39;;f=getattr(tokenize, &#39;open&#39;, open)(__file__);code=f.read().replace(&#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;, &#39;&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&#39;);f.close();exec(compile(code, __file__, &#39;exec&#39;))&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt; install &lt;span class=&quot;synSpecial&quot;&gt;--record&lt;/span&gt; /tmp/pip-record-0w4awj1b/install-record.txt &lt;span class=&quot;synSpecial&quot;&gt;--single-version-externally-managed&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;--compile&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;--user&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;--prefix=:&lt;/span&gt;
    running install
    running build
    running build_py
    
    Downloading Chromedriver...
    
    Traceback &lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;:
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;84&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;&amp;lt;&lt;/span&gt;module&lt;span class=&quot;synStatement&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;synIdentifier&quot;&gt;cmdclass&lt;/span&gt;=&lt;span class=&quot;synSpecial&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;build_py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;: DownloadChromedriver&lt;span class=&quot;synSpecial&quot;&gt;}&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3/dist-packages/setuptools/__init__.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;145&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; setup
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; distutils.core.setup&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;**attrs&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/core.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;148&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; setup
        dist.run_commands&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;966&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_commands
        self.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;985&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
        cmd_obj.run&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3/dist-packages/setuptools/command/install.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; orig.install.run&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/command/install.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;589&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run
        self.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/cmd.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;313&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
        self.distribution.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;985&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
        cmd_obj.run&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/command/build.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;135&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run
        self.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synSpecial&quot;&gt;cmd_name&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/cmd.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;313&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
        self.distribution.run_command&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/lib/python3.7/distutils/dist.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;985&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run_command
        cmd_obj.run&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; run
        url &lt;span class=&quot;synStatement&quot;&gt;=&lt;/span&gt; get_chromedriver_url&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;version&lt;/span&gt;=&lt;span class=&quot;synSpecial&quot;&gt;chromedriver_version&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/tmp/pip-install-dgv6d01o/chromedriver-binary/chromedriver_binary/utils.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;, line &lt;span class=&quot;synConstant&quot;&gt;57&lt;/span&gt;, &lt;span class=&quot;synError&quot;&gt;in&lt;/span&gt; get_chromedriver_url
        raise RuntimeError&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;Could not determine chromedriver download URL for this platform.&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;
    RuntimeError: Could not determine chromedriver download URL &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; this platform.
    
    &lt;span class=&quot;synSpecial&quot;&gt;----------------------------------------&lt;/span&gt;
Command &lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/usr/bin/python3 -u -c &lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;import setuptools, tokenize&lt;span class=&quot;synStatement&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;__file__&lt;/span&gt;=&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;/tmp/pip-install-dgv6d01o/chromedriver-binary/setup.py&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;f&lt;/span&gt;=getattr&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;tokenize, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, open&lt;span class=&quot;synPreProc&quot;&gt;)(&lt;/span&gt;__file__&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;code&lt;/span&gt;=f.&lt;span class=&quot;synStatement&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;.replace&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;;&lt;/span&gt;f.close&lt;span class=&quot;synPreProc&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;;exec&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;compile&lt;span class=&quot;synPreProc&quot;&gt;(&lt;/span&gt;code, __file__, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synPreProc&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt; install --record /tmp/pip-record-0w4awj1b/install-record.txt --single-version-externally-managed --compile --user --prefix=&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&amp;quot;&lt;/span&gt; failed with error code &lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; /tmp/pip-install-dgv6d01o/chromedriver-binary/
&lt;/pre&gt;


&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;　エラーログのうち以下がポイントと思われる。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;  RuntimeError: Could not determine chromedriver download URL &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; this platform.
  
  &lt;span class=&quot;synSpecial&quot;&gt;----------------------------------------&lt;/span&gt;
  Failed building wheel &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; chromedriver-binary
&lt;/pre&gt;


&lt;p&gt;　私の環境は&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Raspberry%20PI&quot;&gt;Raspberry PI&lt;/a&gt; 4B。たぶんARMv7用バイナリがないのだろう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://shuzo-kino.hateblo.jp/entry/2021/02/15/235827&quot;&gt;Ubuntu 20.10 on Raspberry Pi 4B にSeleniumの環境を構築してスクレイピング　その１：環境構築とお試し&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38732822/compile-chromedriver-on-arm&quot;&gt;ARMでChromeDriverをコンパイルする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　うーん、バージョンは次々とあがっていくし、きっとその都度バイナリやインストール方法も変わるし時間もかかるだろう。きっとセキュリティ関係で最新バージョンにしないと動作しないとか、そういったことになりそうな予感。&lt;/p&gt;

&lt;p&gt;　面倒くさすぎる。これならブラウザのUI操作を自動化するテスト用ツールを使ったほうがいいかもしれない。でも今度はそれを調査する必要があるわけで。ああ面倒だ。&lt;/p&gt;

&lt;p&gt;　一旦ここで諦めよう。&lt;/p&gt;

&lt;h1&gt;妥協案&lt;/h1&gt;

&lt;p&gt;　&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA%A5%D5%A5%A9%A5%C8%A5%E9%A5%A4%A5%D5&quot;&gt;はてなフォトライフ&lt;/a&gt;のフォルダの公開範囲を「トップと同じ」にすれば誰でもアクセスできるようになる。ログイン処理が不要になる。それで自動化できるようになる。本当は公開範囲を「自分のみ」のままにしておきたかったが、仕方ない。すべては&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/API&quot;&gt;API&lt;/a&gt;の貧弱さが悪い。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;impressions&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;&lt;a href=&quot;#impressions&quot;&gt;所感&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;　セキュリティは大事だが、自動化できないとかPC使う意味ない。reCAPTCHAで妨害するなら、せめて&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/API&quot;&gt;API&lt;/a&gt;を整えて欲しかった。まっとうなユーザが自分の情報を&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/API&quot;&gt;API&lt;/a&gt;で取得できない。あまりに残念すぎる現状。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA&quot;&gt;はてな&lt;/a&gt;さん、なんとかして。&lt;/p&gt;

&lt;p&gt;&lt;a id=&quot;target-environment&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;&lt;a href=&quot;#target-environment&quot;&gt;対象環境&lt;/a&gt;&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2021-10-10T12:25:12+0900&quot; title=&quot;実施日&quot;&gt;2021-10-10&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 4 Model B&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspberry Pi OS&lt;/a&gt; buster 10.0 2020-08-20 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/10/06/111111&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 5.0.3(1)-release&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;.52-v7l+ &lt;span class=&quot;synComment&quot;&gt;#1441 SMP Tue Aug 3 18:11:56 BST 2021 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;

</hatena:formatted-content>

<category term="Webスクレイピング" />

<app:control>
  <app:draft>yes</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613436579948</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613436579948"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/10/000000"/>
<author><name>ytyaru</name></author>
<title>PythonでRSSを取得する（feedparser）</title>
<updated>2021-10-10T00:00:00+09:00</updated>
<published>2021-10-10T00:00:37+09:00</published>
<app:edited>2021-10-10T00:00:37+09:00</app:edited>
<summary type="text">ためしにやってみた。</summary>
<content type="text/x-markdown">　ためしにやってみた。

&lt;!-- more --&gt;

# 成果物

* [github](https://github.com/ytyaru/Python.feedparser.20190919125712)

# 情報源

* https://qrunch.net/@okayu/entries/QPwwB6RfVon5ynXO
* https://pythonhosted.org/feedparser/

# 手順

## インストール

```sh
pip3 install feedparser
```
```sh
Collecting feedparser
  Using cached https://www.piwheels.org/simple/feedparser/feedparser-5.2.1-py3-none-any.whl
Installing collected packages: feedparser
Successfully installed feedparser-5.2.1
```

## メタデータ表示

show_info.py
```python
import feedparser
print(feedparser.__version__)
print(feedparser.__file__)
print(dir(feedparser))
```
```sh
python3 get_feed.py
```
```sh
5.2.1
/home/pi/.local/lib/python3.5/site-packages/feedparser.py
[&#39;ACCEPTABLE_URI_SCHEMES&#39;, &#39;ACCEPT_HEADER&#39;, &#39;CharacterEncodingOverride&#39;, &#39;CharacterEncodingUnknown&#39;, &#39;EBCDIC_MARKER&#39;, &#39;FeedParserDict&#39;, &#39;NonXMLContentType&#39;, &#39;PREFERRED_XML_PARSERS&#39;, &#39;RESOLVE_RELATIVE_URIS&#39;, &#39;RE_DOCTYPE_PATTERN&#39;, &#39;RE_ENTITY_PATTERN&#39;, &#39;RE_SAFE_ENTITY_PATTERN&#39;, &#39;RE_XML_DECLARATION&#39;, &#39;RE_XML_PI_ENCODING&#39;, &#39;SANITIZE_HTML&#39;, &#39;SUPPORTED_VERSIONS&#39;, &#39;ThingsNobodyCaresAboutButMe&#39;, &#39;USER_AGENT&#39;, &#39;UTF16BE_MARKER&#39;, &#39;UTF16LE_MARKER&#39;, &#39;UTF32BE_MARKER&#39;, &#39;UTF32LE_MARKER&#39;, &#39;UndeclaredNamespace&#39;, &#39;ZERO_BYTES&#39;, &#39;_BaseHTMLProcessor&#39;, &#39;_FeedParserMixin&#39;, &#39;_FeedURLHandler&#39;, &#39;_HTMLSanitizer&#39;, &#39;_LooseFeedParser&#39;, &#39;_RelativeURIResolver&#39;, &#39;_SGML_AVAILABLE&#39;, &#39;_StrictFeedParser&#39;, &#39;_StringIO&#39;, &#39;_XML_AVAILABLE&#39;, &#39;__author__&#39;, &#39;__builtins__&#39;, &#39;__cached__&#39;, &#39;__contributors__&#39;, &#39;__doc__&#39;, &#39;__file__&#39;, &#39;__license__&#39;, &#39;__loader__&#39;, &#39;__name__&#39;, &#39;__package__&#39;, &#39;__spec__&#39;, &#39;__version__&#39;, &#39;_base64decode&#39;, &#39;_build_urllib2_request&#39;, &#39;_convert_to_idn&#39;, &#39;_cp1252&#39;, &#39;_date_handlers&#39;, &#39;_gen_georss_coords&#39;, &#39;_geogCS&#39;, &#39;_greek_date_format_re&#39;, &#39;_greek_months&#39;, &#39;_greek_wdays&#39;, &#39;_hungarian_date_format_re&#39;, &#39;_hungarian_months&#39;, &#39;_iso8601_matches&#39;, &#39;_iso8601_re&#39;, &#39;_iso8601_tmpl&#39;, &#39;_korean_am&#39;, &#39;_korean_day&#39;, &#39;_korean_month&#39;, &#39;_korean_nate_date_re&#39;, &#39;_korean_onblog_date_re&#39;, &#39;_korean_pm&#39;, &#39;_korean_year&#39;, &#39;_l2bytes&#39;, &#39;_makeSafeAbsoluteURI&#39;, &#39;_maketrans&#39;, &#39;_months&#39;, &#39;_open_resource&#39;, &#39;_parse_date&#39;, &#39;_parse_date_asctime&#39;, &#39;_parse_date_greek&#39;, &#39;_parse_date_hungarian&#39;, &#39;_parse_date_iso8601&#39;, &#39;_parse_date_nate&#39;, &#39;_parse_date_onblog&#39;, &#39;_parse_date_perforce&#39;, &#39;_parse_date_rfc822&#39;, &#39;_parse_date_w3dtf&#39;, &#39;_parse_georss_box&#39;, &#39;_parse_georss_line&#39;, &#39;_parse_georss_point&#39;, &#39;_parse_georss_polygon&#39;, &#39;_parse_poslist&#39;, &#39;_parse_psc_chapter_start&#39;, &#39;_resolveRelativeURIs&#39;, &#39;_s2bytes&#39;, &#39;_sanitizeHTML&#39;, &#39;_urifixer&#39;, &#39;_urljoin&#39;, &#39;_xmlescape&#39;, &#39;base64&#39;, &#39;binascii&#39;, &#39;cgi&#39;, &#39;chardet&#39;, &#39;codecs&#39;, &#39;codepoint2name&#39;, &#39;collections&#39;, &#39;convert_to_utf8&#39;, &#39;copy&#39;, &#39;datetime&#39;, &#39;entitydefs&#39;, &#39;gzip&#39;, &#39;itertools&#39;, &#39;name2codepoint&#39;, &#39;parse&#39;, &#39;re&#39;, &#39;registerDateHandler&#39;, &#39;replace_doctype&#39;, &#39;rfc822&#39;, &#39;sgmllib&#39;, &#39;struct&#39;, &#39;time&#39;, &#39;timezonenames&#39;, &#39;types&#39;, &#39;urllib&#39;, &#39;warnings&#39;, &#39;xml&#39;, &#39;zlib&#39;]
```

## コード

　任意RSSから項目を取得する。

```python
import feedparser
import datetime
import sys

if len(sys.argv) &lt; 2:
    raise Error(&#39;第1引数にRSSのURLを指定してください。&#39;)
    exit()
rss = sys.argv[1]
entries = feedparser.parse(rss).entries
print(len(entries))
for entry in entries:
    print(datetime.datetime
        .strptime(entry.published, &#39;%a, %d %b %Y %H:%M:%S %z&#39;)
        .strftime(&#39;%Y-%m-%dT%H:%M:%SZ%z&#39;))
    print(entry.link)
    print(entry.title)
    if &#39;content&#39; in entry : print(entry.content)
    print()
```

　公開日時、URL、タイトルが取得できた。本文はとれなかった。そもそもRSSに無かった。

### Python日付を自動判別してくれず

　様々な書式から自動的に日付型にしてほしい。これ、RSS元がテキストデータだし、書式も自由だから大変なことになりそう。サイトごとにフォーマット変えなきゃダメじゃんか……。変わったら対応しなきゃダメじゃんか……。ないわ。

### 日付の形式

```
Thu, 19 Sep 2019 12:53:49 +0900
```
```
曜日3, 日, 月3 年 時分秒 タイムゾーン
```
```
%a, %d %b %Y %H:%M:%S %z
```

　[ISO-8601](https://ja.wikipedia.org/wiki/ISO_8601)の`YYYY-mm-ddTHH:MM:SSZ`に統一してほしい。

### RSSによっては存在する項目としない項目がある

　この対応も面倒。サイトごとに変えなければならない。いちいち以下のような`if`文が必要とか。ないわ。

```python
if &#39;キー名&#39; in entry : print(entry.キー名)
```

# 対象環境

* &lt;time datetime=&quot;2019-09-19T12:45:42+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```
</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　ためしにやってみた。&lt;/p&gt;

&lt;h1&gt;成果物&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ytyaru/Python.feedparser.20190919125712&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;情報源&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qrunch.net/@okayu/entries/QPwwB6RfVon5ynXO&quot;&gt;https://qrunch.net/@okayu/entries/QPwwB6RfVon5ynXO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pythonhosted.org/feedparser/&quot;&gt;https://pythonhosted.org/feedparser/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;手順&lt;/h1&gt;

&lt;h2&gt;インストール&lt;/h2&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;pip3 install feedparser
&lt;/pre&gt;




&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;Collecting feedparser
  Using cached https://www.piwheels.org/simple/feedparser/feedparser-5.&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;.1-py3-none-any.whl
Installing collected packages: feedparser
Successfully installed feedparser-5.&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
&lt;/pre&gt;


&lt;h2&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%E1%A5%BF%A5%C7%A1%BC%A5%BF&quot;&gt;メタデータ&lt;/a&gt;表示&lt;/h2&gt;

&lt;p&gt;show_info.py&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; feedparser
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(feedparser.__version__)
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(feedparser.__file__)
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;synIdentifier&quot;&gt;dir&lt;/span&gt;(feedparser))
&lt;/pre&gt;




&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;python3 get_feed.py
&lt;/pre&gt;




&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;
/home/pi/.&lt;span class=&quot;synStatement&quot;&gt;local&lt;/span&gt;/lib/python3.&lt;span class=&quot;synConstant&quot;&gt;5&lt;/span&gt;/site-packages/feedparser.py
&lt;span class=&quot;synStatement&quot;&gt;[&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ACCEPTABLE_URI_SCHEMES&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ACCEPT_HEADER&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;CharacterEncodingOverride&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;CharacterEncodingUnknown&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;EBCDIC_MARKER&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;FeedParserDict&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;NonXMLContentType&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;PREFERRED_XML_PARSERS&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;RESOLVE_RELATIVE_URIS&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;RE_DOCTYPE_PATTERN&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;RE_ENTITY_PATTERN&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;RE_SAFE_ENTITY_PATTERN&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;RE_XML_DECLARATION&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;RE_XML_PI_ENCODING&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;SANITIZE_HTML&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;SUPPORTED_VERSIONS&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ThingsNobodyCaresAboutButMe&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;USER_AGENT&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UTF16BE_MARKER&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UTF16LE_MARKER&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UTF32BE_MARKER&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UTF32LE_MARKER&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;UndeclaredNamespace&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;ZERO_BYTES&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_BaseHTMLProcessor&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_FeedParserMixin&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_FeedURLHandler&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_HTMLSanitizer&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_LooseFeedParser&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_RelativeURIResolver&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_SGML_AVAILABLE&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_StrictFeedParser&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_StringIO&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_XML_AVAILABLE&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__author__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__builtins__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__cached__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__contributors__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__doc__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__license__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__loader__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__package__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__spec__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;__version__&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_base64decode&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_build_urllib2_request&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_convert_to_idn&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_cp1252&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_date_handlers&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_gen_georss_coords&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_geogCS&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_greek_date_format_re&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_greek_months&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_greek_wdays&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_hungarian_date_format_re&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_hungarian_months&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_iso8601_matches&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_iso8601_re&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_iso8601_tmpl&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_korean_am&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_korean_day&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_korean_month&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_korean_nate_date_re&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_korean_onblog_date_re&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_korean_pm&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_korean_year&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_l2bytes&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_makeSafeAbsoluteURI&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_maketrans&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_months&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_open_resource&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_asctime&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_greek&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_hungarian&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_iso8601&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_nate&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_onblog&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_perforce&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_rfc822&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_date_w3dtf&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_georss_box&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_georss_line&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_georss_point&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_georss_polygon&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_poslist&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_parse_psc_chapter_start&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_resolveRelativeURIs&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_s2bytes&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_sanitizeHTML&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_urifixer&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_urljoin&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;_xmlescape&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;binascii&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;cgi&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;chardet&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;codecs&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;codepoint2name&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;convert_to_utf8&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;entitydefs&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;gzip&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;itertools&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;name2codepoint&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;registerDateHandler&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;replace_doctype&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;rfc822&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;sgmllib&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;timezonenames&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;, &lt;span class=&quot;synStatement&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;zlib&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;&#39;]&lt;/span&gt;
&lt;/pre&gt;


&lt;h2&gt;コード&lt;/h2&gt;

&lt;p&gt;　任意&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;から項目を取得する。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; feedparser
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; datetime
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; sys

&lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(sys.argv) &amp;lt; &lt;span class=&quot;synConstant&quot;&gt;2&lt;/span&gt;:
    &lt;span class=&quot;synStatement&quot;&gt;raise&lt;/span&gt; Error(&lt;span class=&quot;synConstant&quot;&gt;&#39;第1引数にRSSのURLを指定してください。&#39;&lt;/span&gt;)
    exit()
rss = sys.argv[&lt;span class=&quot;synConstant&quot;&gt;1&lt;/span&gt;]
entries = feedparser.parse(rss).entries
&lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;synIdentifier&quot;&gt;len&lt;/span&gt;(entries))
&lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; entry &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; entries:
    &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(datetime.datetime
        .strptime(entry.published, &lt;span class=&quot;synConstant&quot;&gt;&#39;%a, %d %b %Y %H:%M:%S %z&#39;&lt;/span&gt;)
        .strftime(&lt;span class=&quot;synConstant&quot;&gt;&#39;%Y-%m-%dT%H:%M:%SZ%z&#39;&lt;/span&gt;))
    &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(entry.link)
    &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(entry.title)
    &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;content&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; entry : &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(entry.content)
    &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;()
&lt;/pre&gt;


&lt;p&gt;　公開日時、URL、タイトルが取得できた。本文はとれなかった。そもそも&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;に無かった。&lt;/p&gt;

&lt;h3&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/Python&quot;&gt;Python&lt;/a&gt;日付を自動判別してくれず&lt;/h3&gt;

&lt;p&gt;　様々な書式から自動的に日付型にしてほしい。これ、&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;元がテキストデータだし、書式も自由だから大変なことになりそう。サイトごとにフォーマット変えなきゃダメじゃんか……。変わったら対応しなきゃダメじゃんか……。ないわ。&lt;/p&gt;

&lt;h3&gt;日付の形式&lt;/h3&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;Thu, 19 Sep 2019 12:53:49 +0900&lt;/pre&gt;




&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;曜日3, 日, 月3 年 時分秒 タイムゾーン&lt;/pre&gt;




&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;%a, %d %b %Y %H:%M:%S %z&lt;/pre&gt;


&lt;p&gt;　&lt;a href=&quot;https://ja.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO-8601&lt;/a&gt;の&lt;code&gt;YYYY-mm-ddTHH:MM:SSZ&lt;/code&gt;に統一してほしい。&lt;/p&gt;

&lt;h3&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;によっては存在する項目としない項目がある&lt;/h3&gt;

&lt;p&gt;　この対応も面倒。サイトごとに変えなければならない。いちいち以下のような&lt;code&gt;if&lt;/code&gt;文が必要とか。ないわ。&lt;/p&gt;

&lt;pre class=&quot;code lang-python&quot; data-lang=&quot;python&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;synConstant&quot;&gt;&#39;キー名&#39;&lt;/span&gt; &lt;span class=&quot;synStatement&quot;&gt;in&lt;/span&gt; entry : &lt;span class=&quot;synIdentifier&quot;&gt;print&lt;/span&gt;(entry.キー名)
&lt;/pre&gt;


&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-19T12:45:42+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;

</hatena:formatted-content>

<category term="Webスクレイピング" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613436557452</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613436557452"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/09/000000"/>
<author><name>ytyaru</name></author>
<title>ニュースサイトを探す</title>
<updated>2021-10-09T00:00:00+09:00</updated>
<published>2021-10-09T00:00:30+09:00</published>
<app:edited>2021-10-09T00:00:30+09:00</app:edited>
<summary type="text">これが結構大変だった。</summary>
<content type="text/x-markdown">　これが結構大変だった。

&lt;!-- more --&gt;

# 一覧

* https://toyokeizai.net/articles/-/154062
	* [NHK](https://www.nhk.or.jp/toppage/rss/index.html)
	* [東洋経済](https://toyokeizai.net/list/feed/rss)
	* [yahoo](http://www.yahoo.co.jp/)
	* [huffingtonpost](http://www.huffingtonpost.jp/)
	* 霞が関
		* [外務省](http://www.mofa.go.jp/mofaj/)
		* [総理官邸](http://www.kantei.go.jp/)
		* [財務省](http://www.mof.go.jp/public_relations/)
		* [外務省の会見記録](http://www.mofa.go.jp/mofaj/press/)
		* [国会の議事録](http://kokkai.ndl.go.jp/)
	* 海外
		* アメリカ: [CNNj](http://www.jctv.co.jp/cnnj/)
		* 中国共産党: [人民網](http://j.people.com.cn/)
		* 韓国: [朝鮮日報](http://www.chosunonline.com/), [中央日報](http://japanese.joins.com/)
		* 北朝鮮: [ネナラ](http://www.naenara.com.kp/ja/)
		* 中東: [parstoday](http://parstoday.com/ja/)
* https://matome.naver.jp/odai/2132858895959376001
	* [AFPBB News](https://www.afpbb.com/list/info/rss)
	* [CNN 国外翻訳](http://feeds.cnn.co.jp/rss/cnn/cnn.rdf)
	* [newsweekjapan](https://www.newsweekjapan.jp/story/rss.xml)
	* [nippon.com](https://www.nippon.com/ja/rss_list/)
* https://businesschatmaster.com/slack/rss-johoshushu
* https://berss.com/feed_channel.html

## 世界三大通信社

* [AP(Associated Press)](https://www.apnews.com/Japan)
* [AFP(Agence France-Presse)](https://www.afpbb.com/)
* [Reuters](https://jp.reuters.com)

　AFP以外RSSがないだと……。

# こういうのがいいな

* 全文が読めること
	* 無料
	* 登録不要
	* 「続きを読む」とかクリックしなくても
* 簡単に自動収集できること
	* RSSがあること（WebAPIもあればなおよし）
	* ログイン不要
	* PHP,JavaScriptなどプログラムを動作させずともHTMLだけで本文の全文が読めること

# 良さげ

* [NHK](https://www.nhk.or.jp/toppage/rss/index.html)
	* [主要](https://www.nhk.or.jp/rss/news/cat0.xml)
	* [社会](https://www.nhk.or.jp/rss/news/cat1.xml)
	* [科学・医療](https://www.nhk.or.jp/rss/news/cat3.xml)
	* [政治](https://www.nhk.or.jp/rss/news/cat4.xml)
	* [経済](https://www.nhk.or.jp/rss/news/cat5.xml)
	* [国際](https://www.nhk.or.jp/rss/news/cat6.xml)
	* [スポーツ](https://www.nhk.or.jp/rss/news/cat7.xml)
	* [文化・エンタメ](https://www.nhk.or.jp/rss/news/cat2.xml)
	* [LIVE](https://www.nhk.or.jp/rss/news/cat-live.xml)
* [東洋経済](https://toyokeizai.net/list/feed/rss)
* [nippon.com](https://www.nippon.com/ja/rss_list/)
* 国際
	* [AFPBB](https://www.afpbb.com/list/info/rss)
		* [news](http://feeds.afpbb.com/rss/afpbb/afpbbnews)
	* 米: [CNN 国外翻訳](http://feeds.cnn.co.jp/rss/cnn/cnn.rdf)/中東: [parstoday](http://parstoday.com/ja/)
	* [newsweekjapan](https://www.newsweekjapan.jp/story/rss.xml)

　ただ、HTMLだけで本文を読めるようなサイトはあるのか？

# 対象環境

* &lt;time datetime=&quot;2019-09-19T10:48:17+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　これが結構大変だった。&lt;/p&gt;

&lt;h1&gt;一覧&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://toyokeizai.net/articles/-/154062&quot;&gt;https://toyokeizai.net/articles/-/154062&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/toppage/rss/index.html&quot;&gt;NHK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://toyokeizai.net/list/feed/rss&quot;&gt;東洋経済&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yahoo.co.jp/&quot;&gt;yahoo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.huffingtonpost.jp/&quot;&gt;huffingtonpost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B2%E2%A4%AC%B4%D8&quot;&gt;霞が関&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mofa.go.jp/mofaj/&quot;&gt;外務省&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kantei.go.jp/&quot;&gt;総理官邸&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mof.go.jp/public_relations/&quot;&gt;財務省&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mofa.go.jp/mofaj/press/&quot;&gt;外務省の会見記録&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kokkai.ndl.go.jp/&quot;&gt;国会の議事録&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;海外

&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%A2%A5%E1%A5%EA&quot;&gt;アメリ&lt;/a&gt;カ: &lt;a href=&quot;http://www.jctv.co.jp/cnnj/&quot;&gt;CNNj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%C3%E6%B9%F1%B6%A6%BB%BA%C5%DE&quot;&gt;中国共産党&lt;/a&gt;: &lt;a href=&quot;http://j.people.com.cn/&quot;&gt;人民網&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;韓国: &lt;a href=&quot;http://www.chosunonline.com/&quot;&gt;朝鮮日報&lt;/a&gt;, &lt;a href=&quot;http://japanese.joins.com/&quot;&gt;中央日報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CB%CC%C4%AB%C1%AF&quot;&gt;北朝鮮&lt;/a&gt;: &lt;a href=&quot;http://www.naenara.com.kp/ja/&quot;&gt;ネナラ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;中東: &lt;a href=&quot;http://parstoday.com/ja/&quot;&gt;parstoday&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://matome.naver.jp/odai/2132858895959376001&quot;&gt;https://matome.naver.jp/odai/2132858895959376001&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.afpbb.com/list/info/rss&quot;&gt;AFPBB News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://feeds.cnn.co.jp/rss/cnn/cnn.rdf&quot;&gt;CNN 国外翻訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.newsweekjapan.jp/story/rss.xml&quot;&gt;newsweekjapan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nippon.com/ja/rss_list/&quot;&gt;nippon.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://businesschatmaster.com/slack/rss-johoshushu&quot;&gt;https://businesschatmaster.com/slack/rss-johoshushu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://berss.com/feed_channel.html&quot;&gt;https://berss.com/feed_channel.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;世界三大通信社&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.apnews.com/Japan&quot;&gt;AP(Associated Press)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.afpbb.com/&quot;&gt;AFP(Agence France-Presse)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jp.reuters.com&quot;&gt;Reuters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　AFP以外&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;がないだと……。&lt;/p&gt;

&lt;h1&gt;こういうのがいいな&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;全文が読めること

&lt;ul&gt;
&lt;li&gt;無料&lt;/li&gt;
&lt;li&gt;登録不要&lt;/li&gt;
&lt;li&gt;「続きを読む」とかクリックしなくても&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;簡単に自動収集できること

&lt;ul&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/RSS&quot;&gt;RSS&lt;/a&gt;があること（WebAPIもあればなおよし）&lt;/li&gt;
&lt;li&gt;ログイン不要&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/PHP&quot;&gt;PHP&lt;/a&gt;,&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/JavaScript&quot;&gt;JavaScript&lt;/a&gt;などプログラムを動作させずともHTMLだけで本文の全文が読めること&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;良さげ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/toppage/rss/index.html&quot;&gt;NHK&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat0.xml&quot;&gt;主要&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat1.xml&quot;&gt;社会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat3.xml&quot;&gt;科学・医療&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat4.xml&quot;&gt;政治&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat5.xml&quot;&gt;経済&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat6.xml&quot;&gt;国際&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat7.xml&quot;&gt;スポーツ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat2.xml&quot;&gt;文化・エンタメ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nhk.or.jp/rss/news/cat-live.xml&quot;&gt;LIVE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://toyokeizai.net/list/feed/rss&quot;&gt;東洋経済&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nippon.com/ja/rss_list/&quot;&gt;nippon.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;国際

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.afpbb.com/list/info/rss&quot;&gt;AFPBB&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://feeds.afpbb.com/rss/afpbb/afpbbnews&quot;&gt;news&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;米: &lt;a href=&quot;http://feeds.cnn.co.jp/rss/cnn/cnn.rdf&quot;&gt;CNN 国外翻訳&lt;/a&gt;/中東: &lt;a href=&quot;http://parstoday.com/ja/&quot;&gt;parstoday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.newsweekjapan.jp/story/rss.xml&quot;&gt;newsweekjapan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　ただ、HTMLだけで本文を読めるようなサイトはあるのか？&lt;/p&gt;

&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-19T10:48:17+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;

</hatena:formatted-content>

<category term="Webスクレイピング" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
  <entry>
<id>tag:blog.hatena.ne.jp,2013:blog-ytyaru-6653812171400236667-26006613436536510</id>
<link rel="edit" href="https://blog.hatena.ne.jp/ytyaru/ytyaru.hatenablog.com/atom/entry/26006613436536510"/>
<link rel="alternate" type="text/html" href="https://ytyaru.hatenablog.com/entry/2021/10/08/000000"/>
<author><name>ytyaru</name></author>
<title>新聞の読み方</title>
<updated>2021-10-08T00:00:00+09:00</updated>
<published>2021-10-08T00:00:41+09:00</published>
<app:edited>2021-10-08T00:00:41+09:00</app:edited>
<summary type="text">テキストが主な内容のWebサイトでも使えるか。</summary>
<content type="text/x-markdown">　テキストが主な内容のWebサイトでも使えるか。

&lt;!-- more --&gt;

# 新聞の読み方

* https://toyokeizai.net/articles/-/150213

　要点は以下。

* 立場の違う新聞社の見出しを読む（記事にする・しない）
	* 保守派／リベラル派
* 「見出し」だけを読む
	* 気になったものは「リード」を読む
		* 興味があれば「本文」を読む

## 見出し、リード、本文

項目|意味
----|----
見出し|タイトル
リード|前文。要約。5W1H。
本文|5W1Hで事実だけが書かれた内容。

　最近はリードが本文より長い傾向があるらしい。短時間で読みたいからだとか。

## 保守／リベラル？

　とりあえず言葉の意味から。保守は旧来の伝統や風習を重んじる。リベラルは個人の自由を重んじる。

　これを政治的な姿勢に置き換えると？　保守は国の秩序を重んじ、リベラルは個人の権利や価値観の多様さ。

-|保守|リベラル
----|----|--------
憲法|改憲|護憲
安全保障関連法|支持|反対
改正組織犯罪処罰法|支持|反対
原発|支持|反対
選択的夫婦別姓|反対|賛成
靖国神社公式参拝|賛成|反対

　あまり明確な区別でもないらしい。目安程度。

リベラル|保守
--------|----
左派|右派
左翼|右翼
ハト派|タカ派
穏健派|強行派

　タカ派は武力をもって自分の主張を貫き通す。ハト派は相手と協調して事を収めようとする。

人物|派
----|--
安倍首相|タカ派
トランプ大統領|タカ派

　今は世界中が右に傾いているという見方が強いとか。

# 所感

　日本では政治の話がタブー視される風潮が強い。それ自体が右っぽい。お上に逆らったら力づくで排除される忖度社会こわい。そう思う私は左？　かといって、左というほど何か信念や考えを持っているわけでもない。右も左もわからぬバカ。これが一番しっくりくる。

　なんとなく勝手なイメージは以下。

左|右
--|--
インテリ系|パワー系
理屈屋|脳筋
草食系|肉食系
精神|肉体
ネコ派|イヌ派

　なにより私はネコ派なので左だろう。私は人生の迷子な子猫ちゃん。さあ、イヌのおまわりさんに泣きつきにいこう。左ってどっちですかニャン？

　え、新聞の読み方？　知らん。新聞嫁。

# 対象環境

* &lt;time datetime=&quot;2019-09-19T11:39:45+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;
* [Raspbierry pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 3 Model B+
* [Raspbian stretch](https://ja.wikipedia.org/wiki/Raspbian) 9.0 2018-11-13 [※](http://ytyaru.hatenablog.com/entry/2020/03/29/000000)
* [bash](https://ja.wikipedia.org/wiki/Bash) 4.4.12(1)-release [※](http://ytyaru.hatenablog.com/entry/2020/06/24/000000)
* [SQLite 3.29.0](http://ytyaru.hatenablog.com/entry/2021/06/28/000000) [※](http://ytyaru.hatenablog.com/entry/2021/09/20/000000)
* [MeCab](http://ytyaru.hatenablog.com/entry/2021/02/21/000000) 0.996[ユーザ辞書](http://ytyaru.hatenablog.com/entry/2021/03/19/000000)

```sh
$ uname -a
Linux raspberrypi 4.19.42-v7+ #1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux
```</content>
<hatena:formatted-content type="text/html" xmlns:hatena="http://www.hatena.ne.jp/info/xmlns#">&lt;p&gt;　テキストが主な内容のWebサイトでも使えるか。&lt;/p&gt;

&lt;h1&gt;新聞の読み方&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://toyokeizai.net/articles/-/150213&quot;&gt;https://toyokeizai.net/articles/-/150213&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;　要点は以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;立場の違う新聞社の見出しを読む（記事にする・しない）

&lt;ul&gt;
&lt;li&gt;保守派／リベラル派&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;「見出し」だけを読む

&lt;ul&gt;
&lt;li&gt;気になったものは「リード」を読む

&lt;ul&gt;
&lt;li&gt;興味があれば「本文」を読む&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;見出し、リード、本文&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;項目&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;見出し&lt;/td&gt;
&lt;td&gt;タイトル&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;リード&lt;/td&gt;
&lt;td&gt;前文。要約。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/5W1H&quot;&gt;5W1H&lt;/a&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;本文&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/5W1H&quot;&gt;5W1H&lt;/a&gt;で事実だけが書かれた内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　最近はリードが本文より長い傾向があるらしい。短時間で読みたいからだとか。&lt;/p&gt;

&lt;h2&gt;保守／リベラル？&lt;/h2&gt;

&lt;p&gt;　とりあえず言葉の意味から。保守は旧来の伝統や風習を重んじる。リベラルは個人の自由を重んじる。&lt;/p&gt;

&lt;p&gt;　これを政治的な姿勢に置き換えると？　保守は国の秩序を重んじ、リベラルは個人の権利や価値観の多様さ。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;保守&lt;/th&gt;
&lt;th&gt;リベラル&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B7%FB%CB%A1&quot;&gt;憲法&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B2%FE%B7%FB&quot;&gt;改憲&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;護憲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;安全保障関連法&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;反対&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;改正組織犯罪処罰法&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;反対&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B8%B6%C8%AF&quot;&gt;原発&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;反対&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;選択的&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%C9%D7%C9%D8%CA%CC%C0%AB&quot;&gt;夫婦別姓&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;反対&lt;/td&gt;
&lt;td&gt;賛成&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%CC%F7%B9%F1%BF%C0%BC%D2&quot;&gt;靖国神社&lt;/a&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%B8%F8%BC%B0%BB%B2%C7%D2&quot;&gt;公式参拝&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;賛成&lt;/td&gt;
&lt;td&gt;反対&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　あまり明確な区別でもないらしい。目安程度。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;リベラル&lt;/th&gt;
&lt;th&gt;保守&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;左派&lt;/td&gt;
&lt;td&gt;右派&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;左翼&lt;/td&gt;
&lt;td&gt;右翼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%CF%A5%C8%C7%C9&quot;&gt;ハト派&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BF%A5%AB%C7%C9&quot;&gt;タカ派&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;穏健派&lt;/td&gt;
&lt;td&gt;強行派&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BF%A5%AB%C7%C9&quot;&gt;タカ派&lt;/a&gt;は武力をもって自分の主張を貫き通す。&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%CF%A5%C8%C7%C9&quot;&gt;ハト派&lt;/a&gt;は相手と協調して事を収めようとする。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;人物&lt;/th&gt;
&lt;th&gt;派&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;安倍首相&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BF%A5%AB%C7%C9&quot;&gt;タカ派&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%C8%A5%E9%A5%F3%A5%D7%C2%E7%C5%FD%CE%CE&quot;&gt;トランプ大統領&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%A5%BF%A5%AB%C7%C9&quot;&gt;タカ派&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　今は世界中が右に傾いているという見方が強いとか。&lt;/p&gt;

&lt;h1&gt;所感&lt;/h1&gt;

&lt;p&gt;　日本では政治の話がタブー視される風潮が強い。それ自体が右っぽい。お上に逆らったら力づくで排除される忖度社会こわい。そう思う私は左？　かといって、左というほど何か信念や考えを持っているわけでもない。右も左もわからぬバカ。これが一番しっくりくる。&lt;/p&gt;

&lt;p&gt;　なんとなく勝手なイメージは以下。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;左&lt;/th&gt;
&lt;th&gt;右&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;インテリ系&lt;/td&gt;
&lt;td&gt;パワー系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;理屈屋&lt;/td&gt;
&lt;td&gt;&lt;a class=&quot;keyword&quot; href=&quot;http://d.hatena.ne.jp/keyword/%C7%BE%B6%DA&quot;&gt;脳筋&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;草食系&lt;/td&gt;
&lt;td&gt;肉食系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;精神&lt;/td&gt;
&lt;td&gt;肉体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ネコ派&lt;/td&gt;
&lt;td&gt;イヌ派&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;　なにより私はネコ派なので左だろう。私は人生の迷子な子猫ちゃん。さあ、イヌのおまわりさんに泣きつきにいこう。左ってどっちですかニャン？&lt;/p&gt;

&lt;p&gt;　え、新聞の読み方？　知らん。新聞嫁。&lt;/p&gt;

&lt;h1&gt;対象環境&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;time datetime=&quot;2019-09-19T11:39:45+0900&quot; title=&quot;実施日&quot;&gt;2019-09-19&lt;/time&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspbierry pi&lt;/a&gt; 3 Model B+&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Raspbian&quot;&gt;Raspbian stretch&lt;/a&gt; 9.0 2018-11-13 &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/03/29/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/Bash&quot;&gt;bash&lt;/a&gt; 4.4.12(1)-release &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2020/06/24/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/06/28/000000&quot;&gt;SQLite 3.29.0&lt;/a&gt; &lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/09/20/000000&quot;&gt;※&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/02/21/000000&quot;&gt;MeCab&lt;/a&gt; 0.996&lt;a href=&quot;http://ytyaru.hatenablog.com/entry/2021/03/19/000000&quot;&gt;ユーザ辞書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;$ uname &lt;span class=&quot;synSpecial&quot;&gt;-a&lt;/span&gt;
Linux raspberrypi &lt;span class=&quot;synConstant&quot;&gt;4&lt;/span&gt;.&lt;span class=&quot;synConstant&quot;&gt;19&lt;/span&gt;.42-v7+ &lt;span class=&quot;synComment&quot;&gt;#1218 SMP Tue May 14 00:48:17 BST 2019 armv7l GNU/Linux&lt;/span&gt;
&lt;/pre&gt;

</hatena:formatted-content>

<category term="生活" />

<app:control>
  <app:draft>no</app:draft>
</app:control>

  </entry>
  
</feed>
